/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 25200000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 25200000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 50.0, "minX": 0.0, "maxY": 512.0, "series": [{"data": [[0.0, 51.0], [0.1, 52.0], [0.2, 54.0], [0.3, 55.0], [0.4, 56.0], [0.5, 56.0], [0.6, 56.0], [0.7, 56.0], [0.8, 56.0], [0.9, 57.0], [1.0, 58.0], [1.1, 58.0], [1.2, 58.0], [1.3, 59.0], [1.4, 59.0], [1.5, 60.0], [1.6, 60.0], [1.7, 60.0], [1.8, 61.0], [1.9, 62.0], [2.0, 63.0], [2.1, 64.0], [2.2, 65.0], [2.3, 65.0], [2.4, 65.0], [2.5, 66.0], [2.6, 66.0], [2.7, 67.0], [2.8, 67.0], [2.9, 67.0], [3.0, 69.0], [3.1, 69.0], [3.2, 69.0], [3.3, 69.0], [3.4, 70.0], [3.5, 70.0], [3.6, 70.0], [3.7, 71.0], [3.8, 71.0], [3.9, 71.0], [4.0, 73.0], [4.1, 73.0], [4.2, 73.0], [4.3, 74.0], [4.4, 74.0], [4.5, 75.0], [4.6, 75.0], [4.7, 75.0], [4.8, 76.0], [4.9, 76.0], [5.0, 76.0], [5.1, 76.0], [5.2, 77.0], [5.3, 77.0], [5.4, 78.0], [5.5, 78.0], [5.6, 79.0], [5.7, 80.0], [5.8, 80.0], [5.9, 81.0], [6.0, 81.0], [6.1, 81.0], [6.2, 82.0], [6.3, 82.0], [6.4, 83.0], [6.5, 83.0], [6.6, 84.0], [6.7, 84.0], [6.8, 84.0], [6.9, 85.0], [7.0, 85.0], [7.1, 85.0], [7.2, 86.0], [7.3, 87.0], [7.4, 87.0], [7.5, 88.0], [7.6, 88.0], [7.7, 89.0], [7.8, 89.0], [7.9, 89.0], [8.0, 90.0], [8.1, 90.0], [8.2, 91.0], [8.3, 91.0], [8.4, 91.0], [8.5, 92.0], [8.6, 92.0], [8.7, 92.0], [8.8, 93.0], [8.9, 94.0], [9.0, 94.0], [9.1, 94.0], [9.2, 94.0], [9.3, 95.0], [9.4, 95.0], [9.5, 96.0], [9.6, 96.0], [9.7, 98.0], [9.8, 98.0], [9.9, 98.0], [10.0, 99.0], [10.1, 99.0], [10.2, 99.0], [10.3, 100.0], [10.4, 100.0], [10.5, 101.0], [10.6, 101.0], [10.7, 101.0], [10.8, 102.0], [10.9, 103.0], [11.0, 103.0], [11.1, 104.0], [11.2, 105.0], [11.3, 105.0], [11.4, 105.0], [11.5, 106.0], [11.6, 107.0], [11.7, 107.0], [11.8, 108.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 110.0], [12.3, 110.0], [12.4, 110.0], [12.5, 111.0], [12.6, 111.0], [12.7, 112.0], [12.8, 112.0], [12.9, 112.0], [13.0, 113.0], [13.1, 113.0], [13.2, 113.0], [13.3, 113.0], [13.4, 114.0], [13.5, 115.0], [13.6, 115.0], [13.7, 115.0], [13.8, 116.0], [13.9, 116.0], [14.0, 116.0], [14.1, 117.0], [14.2, 117.0], [14.3, 117.0], [14.4, 117.0], [14.5, 118.0], [14.6, 118.0], [14.7, 119.0], [14.8, 119.0], [14.9, 120.0], [15.0, 120.0], [15.1, 122.0], [15.2, 122.0], [15.3, 123.0], [15.4, 124.0], [15.5, 124.0], [15.6, 124.0], [15.7, 125.0], [15.8, 125.0], [15.9, 125.0], [16.0, 125.0], [16.1, 126.0], [16.2, 127.0], [16.3, 127.0], [16.4, 128.0], [16.5, 128.0], [16.6, 129.0], [16.7, 129.0], [16.8, 129.0], [16.9, 130.0], [17.0, 130.0], [17.1, 131.0], [17.2, 132.0], [17.3, 132.0], [17.4, 133.0], [17.5, 134.0], [17.6, 134.0], [17.7, 134.0], [17.8, 135.0], [17.9, 135.0], [18.0, 136.0], [18.1, 137.0], [18.2, 137.0], [18.3, 137.0], [18.4, 138.0], [18.5, 139.0], [18.6, 139.0], [18.7, 139.0], [18.8, 139.0], [18.9, 139.0], [19.0, 140.0], [19.1, 141.0], [19.2, 143.0], [19.3, 144.0], [19.4, 144.0], [19.5, 144.0], [19.6, 144.0], [19.7, 145.0], [19.8, 145.0], [19.9, 145.0], [20.0, 146.0], [20.1, 146.0], [20.2, 146.0], [20.3, 146.0], [20.4, 147.0], [20.5, 147.0], [20.6, 149.0], [20.7, 149.0], [20.8, 150.0], [20.9, 150.0], [21.0, 150.0], [21.1, 151.0], [21.2, 151.0], [21.3, 151.0], [21.4, 152.0], [21.5, 152.0], [21.6, 153.0], [21.7, 155.0], [21.8, 155.0], [21.9, 156.0], [22.0, 158.0], [22.1, 158.0], [22.2, 158.0], [22.3, 158.0], [22.4, 158.0], [22.5, 159.0], [22.6, 159.0], [22.7, 161.0], [22.8, 161.0], [22.9, 162.0], [23.0, 163.0], [23.1, 164.0], [23.2, 164.0], [23.3, 165.0], [23.4, 165.0], [23.5, 165.0], [23.6, 165.0], [23.7, 166.0], [23.8, 166.0], [23.9, 166.0], [24.0, 167.0], [24.1, 169.0], [24.2, 169.0], [24.3, 169.0], [24.4, 169.0], [24.5, 171.0], [24.6, 171.0], [24.7, 171.0], [24.8, 172.0], [24.9, 173.0], [25.0, 173.0], [25.1, 173.0], [25.2, 173.0], [25.3, 173.0], [25.4, 173.0], [25.5, 174.0], [25.6, 174.0], [25.7, 175.0], [25.8, 175.0], [25.9, 177.0], [26.0, 177.0], [26.1, 177.0], [26.2, 179.0], [26.3, 179.0], [26.4, 179.0], [26.5, 180.0], [26.6, 181.0], [26.7, 181.0], [26.8, 181.0], [26.9, 181.0], [27.0, 182.0], [27.1, 183.0], [27.2, 185.0], [27.3, 185.0], [27.4, 185.0], [27.5, 185.0], [27.6, 186.0], [27.7, 187.0], [27.8, 187.0], [27.9, 187.0], [28.0, 188.0], [28.1, 188.0], [28.2, 189.0], [28.3, 189.0], [28.4, 190.0], [28.5, 190.0], [28.6, 190.0], [28.7, 191.0], [28.8, 191.0], [28.9, 191.0], [29.0, 191.0], [29.1, 191.0], [29.2, 192.0], [29.3, 193.0], [29.4, 193.0], [29.5, 193.0], [29.6, 193.0], [29.7, 193.0], [29.8, 193.0], [29.9, 194.0], [30.0, 194.0], [30.1, 194.0], [30.2, 195.0], [30.3, 195.0], [30.4, 195.0], [30.5, 196.0], [30.6, 196.0], [30.7, 197.0], [30.8, 197.0], [30.9, 197.0], [31.0, 198.0], [31.1, 198.0], [31.2, 198.0], [31.3, 199.0], [31.4, 199.0], [31.5, 200.0], [31.6, 200.0], [31.7, 201.0], [31.8, 201.0], [31.9, 202.0], [32.0, 202.0], [32.1, 202.0], [32.2, 204.0], [32.3, 204.0], [32.4, 204.0], [32.5, 205.0], [32.6, 205.0], [32.7, 205.0], [32.8, 205.0], [32.9, 207.0], [33.0, 207.0], [33.1, 208.0], [33.2, 208.0], [33.3, 209.0], [33.4, 209.0], [33.5, 209.0], [33.6, 210.0], [33.7, 210.0], [33.8, 210.0], [33.9, 211.0], [34.0, 211.0], [34.1, 211.0], [34.2, 212.0], [34.3, 212.0], [34.4, 212.0], [34.5, 213.0], [34.6, 214.0], [34.7, 214.0], [34.8, 215.0], [34.9, 215.0], [35.0, 216.0], [35.1, 216.0], [35.2, 216.0], [35.3, 217.0], [35.4, 218.0], [35.5, 218.0], [35.6, 218.0], [35.7, 218.0], [35.8, 218.0], [35.9, 218.0], [36.0, 218.0], [36.1, 219.0], [36.2, 219.0], [36.3, 220.0], [36.4, 220.0], [36.5, 220.0], [36.6, 221.0], [36.7, 221.0], [36.8, 221.0], [36.9, 221.0], [37.0, 221.0], [37.1, 221.0], [37.2, 222.0], [37.3, 223.0], [37.4, 223.0], [37.5, 223.0], [37.6, 224.0], [37.7, 225.0], [37.8, 225.0], [37.9, 225.0], [38.0, 226.0], [38.1, 226.0], [38.2, 226.0], [38.3, 226.0], [38.4, 227.0], [38.5, 227.0], [38.6, 227.0], [38.7, 228.0], [38.8, 229.0], [38.9, 230.0], [39.0, 231.0], [39.1, 231.0], [39.2, 232.0], [39.3, 232.0], [39.4, 233.0], [39.5, 233.0], [39.6, 233.0], [39.7, 233.0], [39.8, 234.0], [39.9, 235.0], [40.0, 235.0], [40.1, 236.0], [40.2, 237.0], [40.3, 237.0], [40.4, 238.0], [40.5, 238.0], [40.6, 239.0], [40.7, 240.0], [40.8, 240.0], [40.9, 240.0], [41.0, 241.0], [41.1, 242.0], [41.2, 243.0], [41.3, 243.0], [41.4, 243.0], [41.5, 244.0], [41.6, 244.0], [41.7, 244.0], [41.8, 245.0], [41.9, 246.0], [42.0, 247.0], [42.1, 247.0], [42.2, 248.0], [42.3, 249.0], [42.4, 249.0], [42.5, 250.0], [42.6, 250.0], [42.7, 250.0], [42.8, 251.0], [42.9, 251.0], [43.0, 251.0], [43.1, 252.0], [43.2, 253.0], [43.3, 253.0], [43.4, 253.0], [43.5, 253.0], [43.6, 254.0], [43.7, 254.0], [43.8, 254.0], [43.9, 255.0], [44.0, 255.0], [44.1, 256.0], [44.2, 257.0], [44.3, 257.0], [44.4, 257.0], [44.5, 258.0], [44.6, 259.0], [44.7, 259.0], [44.8, 259.0], [44.9, 260.0], [45.0, 260.0], [45.1, 260.0], [45.2, 260.0], [45.3, 260.0], [45.4, 261.0], [45.5, 262.0], [45.6, 263.0], [45.7, 263.0], [45.8, 263.0], [45.9, 265.0], [46.0, 265.0], [46.1, 265.0], [46.2, 265.0], [46.3, 265.0], [46.4, 265.0], [46.5, 266.0], [46.6, 267.0], [46.7, 267.0], [46.8, 267.0], [46.9, 267.0], [47.0, 268.0], [47.1, 269.0], [47.2, 269.0], [47.3, 269.0], [47.4, 270.0], [47.5, 270.0], [47.6, 270.0], [47.7, 272.0], [47.8, 273.0], [47.9, 273.0], [48.0, 273.0], [48.1, 274.0], [48.2, 274.0], [48.3, 274.0], [48.4, 275.0], [48.5, 276.0], [48.6, 276.0], [48.7, 277.0], [48.8, 277.0], [48.9, 278.0], [49.0, 278.0], [49.1, 278.0], [49.2, 280.0], [49.3, 280.0], [49.4, 281.0], [49.5, 281.0], [49.6, 282.0], [49.7, 282.0], [49.8, 283.0], [49.9, 283.0], [50.0, 283.0], [50.1, 283.0], [50.2, 283.0], [50.3, 284.0], [50.4, 285.0], [50.5, 285.0], [50.6, 285.0], [50.7, 286.0], [50.8, 286.0], [50.9, 286.0], [51.0, 287.0], [51.1, 287.0], [51.2, 287.0], [51.3, 288.0], [51.4, 288.0], [51.5, 289.0], [51.6, 289.0], [51.7, 289.0], [51.8, 290.0], [51.9, 290.0], [52.0, 292.0], [52.1, 292.0], [52.2, 292.0], [52.3, 292.0], [52.4, 292.0], [52.5, 292.0], [52.6, 293.0], [52.7, 294.0], [52.8, 294.0], [52.9, 294.0], [53.0, 294.0], [53.1, 294.0], [53.2, 295.0], [53.3, 296.0], [53.4, 296.0], [53.5, 296.0], [53.6, 296.0], [53.7, 297.0], [53.8, 297.0], [53.9, 297.0], [54.0, 297.0], [54.1, 298.0], [54.2, 298.0], [54.3, 298.0], [54.4, 298.0], [54.5, 298.0], [54.6, 299.0], [54.7, 299.0], [54.8, 300.0], [54.9, 300.0], [55.0, 300.0], [55.1, 301.0], [55.2, 301.0], [55.3, 301.0], [55.4, 303.0], [55.5, 303.0], [55.6, 303.0], [55.7, 303.0], [55.8, 305.0], [55.9, 305.0], [56.0, 305.0], [56.1, 306.0], [56.2, 307.0], [56.3, 307.0], [56.4, 308.0], [56.5, 308.0], [56.6, 309.0], [56.7, 310.0], [56.8, 311.0], [56.9, 311.0], [57.0, 312.0], [57.1, 313.0], [57.2, 313.0], [57.3, 313.0], [57.4, 314.0], [57.5, 314.0], [57.6, 315.0], [57.7, 316.0], [57.8, 316.0], [57.9, 317.0], [58.0, 318.0], [58.1, 319.0], [58.2, 319.0], [58.3, 320.0], [58.4, 320.0], [58.5, 320.0], [58.6, 321.0], [58.7, 321.0], [58.8, 321.0], [58.9, 322.0], [59.0, 322.0], [59.1, 323.0], [59.2, 323.0], [59.3, 324.0], [59.4, 325.0], [59.5, 327.0], [59.6, 327.0], [59.7, 329.0], [59.8, 329.0], [59.9, 329.0], [60.0, 330.0], [60.1, 330.0], [60.2, 330.0], [60.3, 331.0], [60.4, 331.0], [60.5, 331.0], [60.6, 331.0], [60.7, 332.0], [60.8, 332.0], [60.9, 333.0], [61.0, 333.0], [61.1, 334.0], [61.2, 335.0], [61.3, 335.0], [61.4, 335.0], [61.5, 335.0], [61.6, 336.0], [61.7, 336.0], [61.8, 336.0], [61.9, 336.0], [62.0, 337.0], [62.1, 337.0], [62.2, 337.0], [62.3, 337.0], [62.4, 338.0], [62.5, 339.0], [62.6, 339.0], [62.7, 339.0], [62.8, 340.0], [62.9, 340.0], [63.0, 341.0], [63.1, 342.0], [63.2, 342.0], [63.3, 343.0], [63.4, 343.0], [63.5, 343.0], [63.6, 343.0], [63.7, 343.0], [63.8, 344.0], [63.9, 344.0], [64.0, 346.0], [64.1, 347.0], [64.2, 347.0], [64.3, 348.0], [64.4, 348.0], [64.5, 348.0], [64.6, 348.0], [64.7, 348.0], [64.8, 348.0], [64.9, 349.0], [65.0, 349.0], [65.1, 350.0], [65.2, 350.0], [65.3, 350.0], [65.4, 351.0], [65.5, 352.0], [65.6, 352.0], [65.7, 352.0], [65.8, 352.0], [65.9, 353.0], [66.0, 354.0], [66.1, 354.0], [66.2, 354.0], [66.3, 355.0], [66.4, 355.0], [66.5, 355.0], [66.6, 356.0], [66.7, 357.0], [66.8, 358.0], [66.9, 358.0], [67.0, 359.0], [67.1, 359.0], [67.2, 359.0], [67.3, 359.0], [67.4, 360.0], [67.5, 360.0], [67.6, 360.0], [67.7, 361.0], [67.8, 361.0], [67.9, 362.0], [68.0, 363.0], [68.1, 363.0], [68.2, 364.0], [68.3, 364.0], [68.4, 365.0], [68.5, 365.0], [68.6, 365.0], [68.7, 365.0], [68.8, 366.0], [68.9, 366.0], [69.0, 367.0], [69.1, 367.0], [69.2, 368.0], [69.3, 368.0], [69.4, 369.0], [69.5, 370.0], [69.6, 371.0], [69.7, 371.0], [69.8, 371.0], [69.9, 371.0], [70.0, 372.0], [70.1, 372.0], [70.2, 372.0], [70.3, 373.0], [70.4, 374.0], [70.5, 374.0], [70.6, 375.0], [70.7, 375.0], [70.8, 375.0], [70.9, 375.0], [71.0, 376.0], [71.1, 376.0], [71.2, 376.0], [71.3, 376.0], [71.4, 377.0], [71.5, 378.0], [71.6, 378.0], [71.7, 378.0], [71.8, 379.0], [71.9, 379.0], [72.0, 380.0], [72.1, 380.0], [72.2, 380.0], [72.3, 381.0], [72.4, 381.0], [72.5, 382.0], [72.6, 382.0], [72.7, 383.0], [72.8, 383.0], [72.9, 383.0], [73.0, 384.0], [73.1, 384.0], [73.2, 384.0], [73.3, 385.0], [73.4, 386.0], [73.5, 386.0], [73.6, 386.0], [73.7, 387.0], [73.8, 388.0], [73.9, 389.0], [74.0, 389.0], [74.1, 390.0], [74.2, 390.0], [74.3, 390.0], [74.4, 390.0], [74.5, 390.0], [74.6, 391.0], [74.7, 391.0], [74.8, 391.0], [74.9, 392.0], [75.0, 392.0], [75.1, 393.0], [75.2, 393.0], [75.3, 394.0], [75.4, 394.0], [75.5, 394.0], [75.6, 394.0], [75.7, 395.0], [75.8, 395.0], [75.9, 396.0], [76.0, 396.0], [76.1, 396.0], [76.2, 397.0], [76.3, 397.0], [76.4, 398.0], [76.5, 398.0], [76.6, 399.0], [76.7, 399.0], [76.8, 400.0], [76.9, 401.0], [77.0, 402.0], [77.1, 402.0], [77.2, 402.0], [77.3, 402.0], [77.4, 403.0], [77.5, 404.0], [77.6, 405.0], [77.7, 405.0], [77.8, 406.0], [77.9, 406.0], [78.0, 407.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 409.0], [78.6, 411.0], [78.7, 411.0], [78.8, 412.0], [78.9, 413.0], [79.0, 413.0], [79.1, 413.0], [79.2, 413.0], [79.3, 414.0], [79.4, 414.0], [79.5, 414.0], [79.6, 415.0], [79.7, 416.0], [79.8, 416.0], [79.9, 416.0], [80.0, 416.0], [80.1, 417.0], [80.2, 417.0], [80.3, 417.0], [80.4, 418.0], [80.5, 418.0], [80.6, 418.0], [80.7, 419.0], [80.8, 420.0], [80.9, 421.0], [81.0, 421.0], [81.1, 422.0], [81.2, 424.0], [81.3, 424.0], [81.4, 425.0], [81.5, 425.0], [81.6, 426.0], [81.7, 426.0], [81.8, 426.0], [81.9, 428.0], [82.0, 429.0], [82.1, 429.0], [82.2, 429.0], [82.3, 430.0], [82.4, 432.0], [82.5, 432.0], [82.6, 432.0], [82.7, 433.0], [82.8, 433.0], [82.9, 433.0], [83.0, 434.0], [83.1, 435.0], [83.2, 435.0], [83.3, 436.0], [83.4, 436.0], [83.5, 437.0], [83.6, 438.0], [83.7, 438.0], [83.8, 438.0], [83.9, 440.0], [84.0, 440.0], [84.1, 441.0], [84.2, 441.0], [84.3, 442.0], [84.4, 442.0], [84.5, 442.0], [84.6, 443.0], [84.7, 443.0], [84.8, 443.0], [84.9, 443.0], [85.0, 444.0], [85.1, 445.0], [85.2, 445.0], [85.3, 445.0], [85.4, 445.0], [85.5, 446.0], [85.6, 447.0], [85.7, 447.0], [85.8, 448.0], [85.9, 448.0], [86.0, 448.0], [86.1, 449.0], [86.2, 449.0], [86.3, 450.0], [86.4, 450.0], [86.5, 451.0], [86.6, 451.0], [86.7, 452.0], [86.8, 452.0], [86.9, 452.0], [87.0, 453.0], [87.1, 453.0], [87.2, 453.0], [87.3, 454.0], [87.4, 454.0], [87.5, 454.0], [87.6, 455.0], [87.7, 455.0], [87.8, 455.0], [87.9, 456.0], [88.0, 456.0], [88.1, 456.0], [88.2, 456.0], [88.3, 457.0], [88.4, 457.0], [88.5, 457.0], [88.6, 458.0], [88.7, 458.0], [88.8, 459.0], [88.9, 460.0], [89.0, 460.0], [89.1, 460.0], [89.2, 461.0], [89.3, 462.0], [89.4, 462.0], [89.5, 462.0], [89.6, 462.0], [89.7, 463.0], [89.8, 464.0], [89.9, 464.0], [90.0, 464.0], [90.1, 464.0], [90.2, 464.0], [90.3, 464.0], [90.4, 465.0], [90.5, 466.0], [90.6, 466.0], [90.7, 468.0], [90.8, 468.0], [90.9, 469.0], [91.0, 469.0], [91.1, 469.0], [91.2, 469.0], [91.3, 469.0], [91.4, 470.0], [91.5, 470.0], [91.6, 470.0], [91.7, 471.0], [91.8, 472.0], [91.9, 472.0], [92.0, 473.0], [92.1, 474.0], [92.2, 474.0], [92.3, 474.0], [92.4, 475.0], [92.5, 475.0], [92.6, 476.0], [92.7, 476.0], [92.8, 476.0], [92.9, 476.0], [93.0, 477.0], [93.1, 477.0], [93.2, 478.0], [93.3, 479.0], [93.4, 480.0], [93.5, 480.0], [93.6, 480.0], [93.7, 481.0], [93.8, 481.0], [93.9, 481.0], [94.0, 482.0], [94.1, 482.0], [94.2, 482.0], [94.3, 483.0], [94.4, 483.0], [94.5, 484.0], [94.6, 484.0], [94.7, 484.0], [94.8, 485.0], [94.9, 485.0], [95.0, 486.0], [95.1, 487.0], [95.2, 487.0], [95.3, 488.0], [95.4, 488.0], [95.5, 489.0], [95.6, 489.0], [95.7, 490.0], [95.8, 490.0], [95.9, 490.0], [96.0, 491.0], [96.1, 491.0], [96.2, 492.0], [96.3, 492.0], [96.4, 493.0], [96.5, 493.0], [96.6, 493.0], [96.7, 493.0], [96.8, 493.0], [96.9, 494.0], [97.0, 494.0], [97.1, 494.0], [97.2, 495.0], [97.3, 495.0], [97.4, 495.0], [97.5, 496.0], [97.6, 496.0], [97.7, 496.0], [97.8, 497.0], [97.9, 497.0], [98.0, 497.0], [98.1, 497.0], [98.2, 498.0], [98.3, 498.0], [98.4, 499.0], [98.5, 499.0], [98.6, 499.0], [98.7, 499.0], [98.8, 499.0], [98.9, 500.0], [99.0, 500.0], [99.1, 500.0], [99.2, 500.0], [99.3, 501.0], [99.4, 501.0], [99.5, 501.0], [99.6, 502.0], [99.7, 502.0], [99.8, 503.0], [99.9, 505.0]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[0.0, 50.0], [0.1, 51.0], [0.2, 51.0], [0.3, 54.0], [0.4, 54.0], [0.5, 55.0], [0.6, 56.0], [0.7, 56.0], [0.8, 57.0], [0.9, 57.0], [1.0, 57.0], [1.1, 58.0], [1.2, 58.0], [1.3, 58.0], [1.4, 59.0], [1.5, 59.0], [1.6, 59.0], [1.7, 60.0], [1.8, 60.0], [1.9, 61.0], [2.0, 61.0], [2.1, 62.0], [2.2, 63.0], [2.3, 63.0], [2.4, 64.0], [2.5, 65.0], [2.6, 65.0], [2.7, 65.0], [2.8, 66.0], [2.9, 67.0], [3.0, 68.0], [3.1, 68.0], [3.2, 69.0], [3.3, 69.0], [3.4, 70.0], [3.5, 70.0], [3.6, 72.0], [3.7, 72.0], [3.8, 72.0], [3.9, 72.0], [4.0, 73.0], [4.1, 73.0], [4.2, 73.0], [4.3, 74.0], [4.4, 74.0], [4.5, 75.0], [4.6, 75.0], [4.7, 76.0], [4.8, 76.0], [4.9, 76.0], [5.0, 76.0], [5.1, 77.0], [5.2, 77.0], [5.3, 77.0], [5.4, 78.0], [5.5, 79.0], [5.6, 80.0], [5.7, 80.0], [5.8, 80.0], [5.9, 80.0], [6.0, 81.0], [6.1, 81.0], [6.2, 82.0], [6.3, 82.0], [6.4, 83.0], [6.5, 83.0], [6.6, 84.0], [6.7, 84.0], [6.8, 84.0], [6.9, 85.0], [7.0, 86.0], [7.1, 86.0], [7.2, 86.0], [7.3, 87.0], [7.4, 87.0], [7.5, 88.0], [7.6, 88.0], [7.7, 88.0], [7.8, 89.0], [7.9, 89.0], [8.0, 90.0], [8.1, 91.0], [8.2, 91.0], [8.3, 91.0], [8.4, 91.0], [8.5, 91.0], [8.6, 92.0], [8.7, 92.0], [8.8, 93.0], [8.9, 93.0], [9.0, 94.0], [9.1, 94.0], [9.2, 95.0], [9.3, 95.0], [9.4, 95.0], [9.5, 96.0], [9.6, 97.0], [9.7, 97.0], [9.8, 97.0], [9.9, 97.0], [10.0, 98.0], [10.1, 98.0], [10.2, 98.0], [10.3, 99.0], [10.4, 99.0], [10.5, 100.0], [10.6, 100.0], [10.7, 100.0], [10.8, 100.0], [10.9, 101.0], [11.0, 101.0], [11.1, 102.0], [11.2, 102.0], [11.3, 102.0], [11.4, 103.0], [11.5, 104.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 105.0], [12.0, 105.0], [12.1, 106.0], [12.2, 106.0], [12.3, 107.0], [12.4, 107.0], [12.5, 108.0], [12.6, 108.0], [12.7, 108.0], [12.8, 109.0], [12.9, 109.0], [13.0, 109.0], [13.1, 110.0], [13.2, 110.0], [13.3, 110.0], [13.4, 111.0], [13.5, 111.0], [13.6, 112.0], [13.7, 112.0], [13.8, 113.0], [13.9, 113.0], [14.0, 113.0], [14.1, 114.0], [14.2, 115.0], [14.3, 116.0], [14.4, 116.0], [14.5, 116.0], [14.6, 117.0], [14.7, 118.0], [14.8, 118.0], [14.9, 118.0], [15.0, 119.0], [15.1, 119.0], [15.2, 120.0], [15.3, 120.0], [15.4, 121.0], [15.5, 122.0], [15.6, 122.0], [15.7, 123.0], [15.8, 124.0], [15.9, 124.0], [16.0, 125.0], [16.1, 125.0], [16.2, 126.0], [16.3, 126.0], [16.4, 126.0], [16.5, 126.0], [16.6, 127.0], [16.7, 127.0], [16.8, 127.0], [16.9, 128.0], [17.0, 128.0], [17.1, 128.0], [17.2, 128.0], [17.3, 128.0], [17.4, 129.0], [17.5, 129.0], [17.6, 130.0], [17.7, 131.0], [17.8, 132.0], [17.9, 132.0], [18.0, 132.0], [18.1, 133.0], [18.2, 133.0], [18.3, 134.0], [18.4, 135.0], [18.5, 135.0], [18.6, 136.0], [18.7, 136.0], [18.8, 136.0], [18.9, 136.0], [19.0, 137.0], [19.1, 137.0], [19.2, 137.0], [19.3, 137.0], [19.4, 138.0], [19.5, 138.0], [19.6, 138.0], [19.7, 139.0], [19.8, 139.0], [19.9, 139.0], [20.0, 139.0], [20.1, 140.0], [20.2, 140.0], [20.3, 141.0], [20.4, 141.0], [20.5, 142.0], [20.6, 142.0], [20.7, 142.0], [20.8, 142.0], [20.9, 143.0], [21.0, 143.0], [21.1, 143.0], [21.2, 143.0], [21.3, 144.0], [21.4, 144.0], [21.5, 145.0], [21.6, 145.0], [21.7, 145.0], [21.8, 146.0], [21.9, 146.0], [22.0, 147.0], [22.1, 147.0], [22.2, 148.0], [22.3, 148.0], [22.4, 148.0], [22.5, 149.0], [22.6, 149.0], [22.7, 150.0], [22.8, 150.0], [22.9, 151.0], [23.0, 152.0], [23.1, 153.0], [23.2, 155.0], [23.3, 155.0], [23.4, 155.0], [23.5, 155.0], [23.6, 156.0], [23.7, 156.0], [23.8, 156.0], [23.9, 156.0], [24.0, 157.0], [24.1, 157.0], [24.2, 157.0], [24.3, 158.0], [24.4, 159.0], [24.5, 159.0], [24.6, 160.0], [24.7, 160.0], [24.8, 160.0], [24.9, 161.0], [25.0, 161.0], [25.1, 162.0], [25.2, 162.0], [25.3, 162.0], [25.4, 163.0], [25.5, 163.0], [25.6, 163.0], [25.7, 164.0], [25.8, 164.0], [25.9, 165.0], [26.0, 165.0], [26.1, 166.0], [26.2, 166.0], [26.3, 167.0], [26.4, 167.0], [26.5, 167.0], [26.6, 168.0], [26.7, 168.0], [26.8, 168.0], [26.9, 169.0], [27.0, 169.0], [27.1, 169.0], [27.2, 170.0], [27.3, 171.0], [27.4, 171.0], [27.5, 171.0], [27.6, 172.0], [27.7, 172.0], [27.8, 174.0], [27.9, 174.0], [28.0, 174.0], [28.1, 174.0], [28.2, 175.0], [28.3, 175.0], [28.4, 176.0], [28.5, 176.0], [28.6, 177.0], [28.7, 177.0], [28.8, 178.0], [28.9, 178.0], [29.0, 178.0], [29.1, 178.0], [29.2, 179.0], [29.3, 179.0], [29.4, 179.0], [29.5, 179.0], [29.6, 180.0], [29.7, 180.0], [29.8, 181.0], [29.9, 181.0], [30.0, 181.0], [30.1, 181.0], [30.2, 182.0], [30.3, 183.0], [30.4, 183.0], [30.5, 183.0], [30.6, 183.0], [30.7, 184.0], [30.8, 185.0], [30.9, 185.0], [31.0, 186.0], [31.1, 186.0], [31.2, 186.0], [31.3, 186.0], [31.4, 187.0], [31.5, 188.0], [31.6, 188.0], [31.7, 188.0], [31.8, 189.0], [31.9, 189.0], [32.0, 189.0], [32.1, 190.0], [32.2, 190.0], [32.3, 190.0], [32.4, 190.0], [32.5, 191.0], [32.6, 191.0], [32.7, 192.0], [32.8, 192.0], [32.9, 193.0], [33.0, 193.0], [33.1, 193.0], [33.2, 194.0], [33.3, 194.0], [33.4, 195.0], [33.5, 196.0], [33.6, 197.0], [33.7, 197.0], [33.8, 198.0], [33.9, 198.0], [34.0, 198.0], [34.1, 200.0], [34.2, 200.0], [34.3, 200.0], [34.4, 200.0], [34.5, 200.0], [34.6, 200.0], [34.7, 201.0], [34.8, 201.0], [34.9, 201.0], [35.0, 201.0], [35.1, 202.0], [35.2, 202.0], [35.3, 203.0], [35.4, 204.0], [35.5, 204.0], [35.6, 204.0], [35.7, 204.0], [35.8, 204.0], [35.9, 205.0], [36.0, 206.0], [36.1, 206.0], [36.2, 207.0], [36.3, 208.0], [36.4, 208.0], [36.5, 208.0], [36.6, 208.0], [36.7, 209.0], [36.8, 209.0], [36.9, 209.0], [37.0, 209.0], [37.1, 209.0], [37.2, 210.0], [37.3, 210.0], [37.4, 210.0], [37.5, 210.0], [37.6, 210.0], [37.7, 211.0], [37.8, 213.0], [37.9, 213.0], [38.0, 213.0], [38.1, 214.0], [38.2, 215.0], [38.3, 215.0], [38.4, 216.0], [38.5, 216.0], [38.6, 216.0], [38.7, 216.0], [38.8, 216.0], [38.9, 217.0], [39.0, 217.0], [39.1, 217.0], [39.2, 217.0], [39.3, 218.0], [39.4, 218.0], [39.5, 218.0], [39.6, 219.0], [39.7, 220.0], [39.8, 220.0], [39.9, 220.0], [40.0, 221.0], [40.1, 221.0], [40.2, 222.0], [40.3, 222.0], [40.4, 223.0], [40.5, 223.0], [40.6, 225.0], [40.7, 225.0], [40.8, 225.0], [40.9, 226.0], [41.0, 226.0], [41.1, 227.0], [41.2, 227.0], [41.3, 227.0], [41.4, 227.0], [41.5, 228.0], [41.6, 229.0], [41.7, 229.0], [41.8, 229.0], [41.9, 230.0], [42.0, 230.0], [42.1, 230.0], [42.2, 230.0], [42.3, 232.0], [42.4, 235.0], [42.5, 235.0], [42.6, 236.0], [42.7, 236.0], [42.8, 237.0], [42.9, 237.0], [43.0, 237.0], [43.1, 237.0], [43.2, 237.0], [43.3, 238.0], [43.4, 238.0], [43.5, 239.0], [43.6, 239.0], [43.7, 239.0], [43.8, 239.0], [43.9, 240.0], [44.0, 240.0], [44.1, 242.0], [44.2, 242.0], [44.3, 242.0], [44.4, 242.0], [44.5, 242.0], [44.6, 243.0], [44.7, 243.0], [44.8, 243.0], [44.9, 243.0], [45.0, 244.0], [45.1, 244.0], [45.2, 244.0], [45.3, 245.0], [45.4, 245.0], [45.5, 245.0], [45.6, 246.0], [45.7, 246.0], [45.8, 247.0], [45.9, 247.0], [46.0, 248.0], [46.1, 248.0], [46.2, 249.0], [46.3, 249.0], [46.4, 249.0], [46.5, 250.0], [46.6, 250.0], [46.7, 250.0], [46.8, 250.0], [46.9, 251.0], [47.0, 251.0], [47.1, 252.0], [47.2, 253.0], [47.3, 253.0], [47.4, 253.0], [47.5, 253.0], [47.6, 254.0], [47.7, 254.0], [47.8, 255.0], [47.9, 255.0], [48.0, 255.0], [48.1, 255.0], [48.2, 255.0], [48.3, 256.0], [48.4, 256.0], [48.5, 257.0], [48.6, 258.0], [48.7, 259.0], [48.8, 259.0], [48.9, 259.0], [49.0, 259.0], [49.1, 260.0], [49.2, 261.0], [49.3, 262.0], [49.4, 262.0], [49.5, 264.0], [49.6, 265.0], [49.7, 265.0], [49.8, 265.0], [49.9, 266.0], [50.0, 266.0], [50.1, 266.0], [50.2, 266.0], [50.3, 267.0], [50.4, 267.0], [50.5, 267.0], [50.6, 268.0], [50.7, 268.0], [50.8, 269.0], [50.9, 269.0], [51.0, 269.0], [51.1, 270.0], [51.2, 270.0], [51.3, 271.0], [51.4, 271.0], [51.5, 271.0], [51.6, 271.0], [51.7, 272.0], [51.8, 272.0], [51.9, 273.0], [52.0, 273.0], [52.1, 274.0], [52.2, 274.0], [52.3, 275.0], [52.4, 275.0], [52.5, 276.0], [52.6, 276.0], [52.7, 276.0], [52.8, 276.0], [52.9, 277.0], [53.0, 277.0], [53.1, 277.0], [53.2, 278.0], [53.3, 278.0], [53.4, 278.0], [53.5, 278.0], [53.6, 279.0], [53.7, 280.0], [53.8, 280.0], [53.9, 281.0], [54.0, 281.0], [54.1, 283.0], [54.2, 283.0], [54.3, 283.0], [54.4, 283.0], [54.5, 284.0], [54.6, 284.0], [54.7, 284.0], [54.8, 285.0], [54.9, 285.0], [55.0, 285.0], [55.1, 286.0], [55.2, 287.0], [55.3, 287.0], [55.4, 287.0], [55.5, 288.0], [55.6, 289.0], [55.7, 290.0], [55.8, 290.0], [55.9, 290.0], [56.0, 291.0], [56.1, 292.0], [56.2, 292.0], [56.3, 292.0], [56.4, 292.0], [56.5, 294.0], [56.6, 294.0], [56.7, 295.0], [56.8, 295.0], [56.9, 295.0], [57.0, 296.0], [57.1, 296.0], [57.2, 297.0], [57.3, 297.0], [57.4, 297.0], [57.5, 298.0], [57.6, 299.0], [57.7, 299.0], [57.8, 299.0], [57.9, 300.0], [58.0, 301.0], [58.1, 302.0], [58.2, 302.0], [58.3, 302.0], [58.4, 302.0], [58.5, 304.0], [58.6, 304.0], [58.7, 304.0], [58.8, 305.0], [58.9, 307.0], [59.0, 307.0], [59.1, 307.0], [59.2, 308.0], [59.3, 309.0], [59.4, 309.0], [59.5, 309.0], [59.6, 311.0], [59.7, 312.0], [59.8, 312.0], [59.9, 312.0], [60.0, 312.0], [60.1, 313.0], [60.2, 313.0], [60.3, 313.0], [60.4, 313.0], [60.5, 314.0], [60.6, 314.0], [60.7, 315.0], [60.8, 316.0], [60.9, 318.0], [61.0, 318.0], [61.1, 318.0], [61.2, 319.0], [61.3, 319.0], [61.4, 320.0], [61.5, 320.0], [61.6, 320.0], [61.7, 321.0], [61.8, 321.0], [61.9, 322.0], [62.0, 322.0], [62.1, 322.0], [62.2, 323.0], [62.3, 323.0], [62.4, 324.0], [62.5, 324.0], [62.6, 324.0], [62.7, 324.0], [62.8, 324.0], [62.9, 325.0], [63.0, 325.0], [63.1, 325.0], [63.2, 325.0], [63.3, 326.0], [63.4, 327.0], [63.5, 327.0], [63.6, 327.0], [63.7, 327.0], [63.8, 328.0], [63.9, 328.0], [64.0, 328.0], [64.1, 329.0], [64.2, 330.0], [64.3, 330.0], [64.4, 331.0], [64.5, 331.0], [64.6, 332.0], [64.7, 332.0], [64.8, 332.0], [64.9, 333.0], [65.0, 334.0], [65.1, 334.0], [65.2, 334.0], [65.3, 335.0], [65.4, 336.0], [65.5, 337.0], [65.6, 338.0], [65.7, 338.0], [65.8, 338.0], [65.9, 339.0], [66.0, 339.0], [66.1, 340.0], [66.2, 340.0], [66.3, 340.0], [66.4, 341.0], [66.5, 342.0], [66.6, 342.0], [66.7, 344.0], [66.8, 344.0], [66.9, 345.0], [67.0, 346.0], [67.1, 347.0], [67.2, 347.0], [67.3, 347.0], [67.4, 348.0], [67.5, 348.0], [67.6, 348.0], [67.7, 348.0], [67.8, 349.0], [67.9, 349.0], [68.0, 349.0], [68.1, 350.0], [68.2, 351.0], [68.3, 352.0], [68.4, 353.0], [68.5, 353.0], [68.6, 353.0], [68.7, 353.0], [68.8, 353.0], [68.9, 353.0], [69.0, 354.0], [69.1, 354.0], [69.2, 354.0], [69.3, 355.0], [69.4, 355.0], [69.5, 355.0], [69.6, 356.0], [69.7, 356.0], [69.8, 356.0], [69.9, 357.0], [70.0, 358.0], [70.1, 359.0], [70.2, 359.0], [70.3, 359.0], [70.4, 359.0], [70.5, 360.0], [70.6, 360.0], [70.7, 360.0], [70.8, 360.0], [70.9, 361.0], [71.0, 361.0], [71.1, 362.0], [71.2, 363.0], [71.3, 363.0], [71.4, 363.0], [71.5, 363.0], [71.6, 365.0], [71.7, 365.0], [71.8, 366.0], [71.9, 366.0], [72.0, 367.0], [72.1, 368.0], [72.2, 369.0], [72.3, 369.0], [72.4, 369.0], [72.5, 370.0], [72.6, 370.0], [72.7, 370.0], [72.8, 371.0], [72.9, 371.0], [73.0, 371.0], [73.1, 372.0], [73.2, 372.0], [73.3, 373.0], [73.4, 373.0], [73.5, 374.0], [73.6, 375.0], [73.7, 375.0], [73.8, 375.0], [73.9, 375.0], [74.0, 376.0], [74.1, 376.0], [74.2, 377.0], [74.3, 377.0], [74.4, 378.0], [74.5, 378.0], [74.6, 379.0], [74.7, 379.0], [74.8, 379.0], [74.9, 379.0], [75.0, 380.0], [75.1, 381.0], [75.2, 381.0], [75.3, 382.0], [75.4, 383.0], [75.5, 383.0], [75.6, 383.0], [75.7, 384.0], [75.8, 385.0], [75.9, 387.0], [76.0, 387.0], [76.1, 388.0], [76.2, 388.0], [76.3, 388.0], [76.4, 388.0], [76.5, 389.0], [76.6, 389.0], [76.7, 390.0], [76.8, 391.0], [76.9, 391.0], [77.0, 392.0], [77.1, 392.0], [77.2, 392.0], [77.3, 392.0], [77.4, 393.0], [77.5, 394.0], [77.6, 394.0], [77.7, 395.0], [77.8, 395.0], [77.9, 395.0], [78.0, 395.0], [78.1, 396.0], [78.2, 396.0], [78.3, 397.0], [78.4, 398.0], [78.5, 399.0], [78.6, 399.0], [78.7, 399.0], [78.8, 399.0], [78.9, 400.0], [79.0, 400.0], [79.1, 401.0], [79.2, 401.0], [79.3, 401.0], [79.4, 401.0], [79.5, 402.0], [79.6, 402.0], [79.7, 402.0], [79.8, 402.0], [79.9, 402.0], [80.0, 403.0], [80.1, 403.0], [80.2, 404.0], [80.3, 405.0], [80.4, 406.0], [80.5, 406.0], [80.6, 406.0], [80.7, 406.0], [80.8, 406.0], [80.9, 407.0], [81.0, 408.0], [81.1, 409.0], [81.2, 410.0], [81.3, 410.0], [81.4, 410.0], [81.5, 411.0], [81.6, 411.0], [81.7, 411.0], [81.8, 412.0], [81.9, 413.0], [82.0, 413.0], [82.1, 413.0], [82.2, 414.0], [82.3, 414.0], [82.4, 415.0], [82.5, 415.0], [82.6, 416.0], [82.7, 417.0], [82.8, 417.0], [82.9, 417.0], [83.0, 417.0], [83.1, 417.0], [83.2, 417.0], [83.3, 418.0], [83.4, 419.0], [83.5, 419.0], [83.6, 422.0], [83.7, 423.0], [83.8, 423.0], [83.9, 423.0], [84.0, 424.0], [84.1, 425.0], [84.2, 425.0], [84.3, 425.0], [84.4, 425.0], [84.5, 426.0], [84.6, 427.0], [84.7, 427.0], [84.8, 427.0], [84.9, 428.0], [85.0, 429.0], [85.1, 430.0], [85.2, 430.0], [85.3, 430.0], [85.4, 430.0], [85.5, 431.0], [85.6, 431.0], [85.7, 431.0], [85.8, 432.0], [85.9, 432.0], [86.0, 433.0], [86.1, 433.0], [86.2, 433.0], [86.3, 434.0], [86.4, 434.0], [86.5, 434.0], [86.6, 434.0], [86.7, 435.0], [86.8, 435.0], [86.9, 435.0], [87.0, 436.0], [87.1, 437.0], [87.2, 437.0], [87.3, 438.0], [87.4, 439.0], [87.5, 440.0], [87.6, 441.0], [87.7, 441.0], [87.8, 441.0], [87.9, 442.0], [88.0, 442.0], [88.1, 442.0], [88.2, 445.0], [88.3, 445.0], [88.4, 445.0], [88.5, 446.0], [88.6, 447.0], [88.7, 447.0], [88.8, 447.0], [88.9, 447.0], [89.0, 448.0], [89.1, 448.0], [89.2, 449.0], [89.3, 449.0], [89.4, 450.0], [89.5, 450.0], [89.6, 450.0], [89.7, 451.0], [89.8, 452.0], [89.9, 452.0], [90.0, 453.0], [90.1, 454.0], [90.2, 455.0], [90.3, 457.0], [90.4, 457.0], [90.5, 457.0], [90.6, 458.0], [90.7, 459.0], [90.8, 459.0], [90.9, 459.0], [91.0, 460.0], [91.1, 460.0], [91.2, 460.0], [91.3, 461.0], [91.4, 461.0], [91.5, 461.0], [91.6, 463.0], [91.7, 463.0], [91.8, 463.0], [91.9, 464.0], [92.0, 465.0], [92.1, 465.0], [92.2, 465.0], [92.3, 465.0], [92.4, 466.0], [92.5, 466.0], [92.6, 466.0], [92.7, 467.0], [92.8, 467.0], [92.9, 468.0], [93.0, 468.0], [93.1, 469.0], [93.2, 469.0], [93.3, 470.0], [93.4, 470.0], [93.5, 471.0], [93.6, 472.0], [93.7, 472.0], [93.8, 473.0], [93.9, 474.0], [94.0, 474.0], [94.1, 474.0], [94.2, 474.0], [94.3, 475.0], [94.4, 475.0], [94.5, 475.0], [94.6, 476.0], [94.7, 476.0], [94.8, 477.0], [94.9, 477.0], [95.0, 478.0], [95.1, 478.0], [95.2, 479.0], [95.3, 479.0], [95.4, 480.0], [95.5, 480.0], [95.6, 480.0], [95.7, 481.0], [95.8, 482.0], [95.9, 482.0], [96.0, 483.0], [96.1, 485.0], [96.2, 485.0], [96.3, 485.0], [96.4, 486.0], [96.5, 487.0], [96.6, 487.0], [96.7, 487.0], [96.8, 487.0], [96.9, 488.0], [97.0, 488.0], [97.1, 489.0], [97.2, 489.0], [97.3, 489.0], [97.4, 489.0], [97.5, 490.0], [97.6, 490.0], [97.7, 492.0], [97.8, 492.0], [97.9, 493.0], [98.0, 493.0], [98.1, 493.0], [98.2, 494.0], [98.3, 495.0], [98.4, 495.0], [98.5, 495.0], [98.6, 497.0], [98.7, 497.0], [98.8, 498.0], [98.9, 498.0], [99.0, 498.0], [99.1, 498.0], [99.2, 499.0], [99.3, 500.0], [99.4, 500.0], [99.5, 500.0], [99.6, 503.0], [99.7, 503.0], [99.8, 504.0], [99.9, 507.0]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[0.0, 51.0], [0.1, 53.0], [0.2, 55.0], [0.3, 55.0], [0.4, 56.0], [0.5, 56.0], [0.6, 56.0], [0.7, 57.0], [0.8, 57.0], [0.9, 57.0], [1.0, 57.0], [1.1, 58.0], [1.2, 58.0], [1.3, 58.0], [1.4, 59.0], [1.5, 59.0], [1.6, 60.0], [1.7, 60.0], [1.8, 61.0], [1.9, 61.0], [2.0, 61.0], [2.1, 62.0], [2.2, 62.0], [2.3, 63.0], [2.4, 63.0], [2.5, 64.0], [2.6, 64.0], [2.7, 65.0], [2.8, 65.0], [2.9, 65.0], [3.0, 66.0], [3.1, 66.0], [3.2, 67.0], [3.3, 67.0], [3.4, 67.0], [3.5, 67.0], [3.6, 68.0], [3.7, 68.0], [3.8, 68.0], [3.9, 69.0], [4.0, 69.0], [4.1, 70.0], [4.2, 70.0], [4.3, 71.0], [4.4, 71.0], [4.5, 72.0], [4.6, 72.0], [4.7, 73.0], [4.8, 73.0], [4.9, 75.0], [5.0, 76.0], [5.1, 76.0], [5.2, 77.0], [5.3, 78.0], [5.4, 79.0], [5.5, 79.0], [5.6, 80.0], [5.7, 81.0], [5.8, 81.0], [5.9, 81.0], [6.0, 82.0], [6.1, 82.0], [6.2, 82.0], [6.3, 82.0], [6.4, 83.0], [6.5, 83.0], [6.6, 84.0], [6.7, 84.0], [6.8, 85.0], [6.9, 86.0], [7.0, 86.0], [7.1, 87.0], [7.2, 88.0], [7.3, 88.0], [7.4, 88.0], [7.5, 89.0], [7.6, 90.0], [7.7, 90.0], [7.8, 91.0], [7.9, 91.0], [8.0, 91.0], [8.1, 92.0], [8.2, 92.0], [8.3, 93.0], [8.4, 95.0], [8.5, 95.0], [8.6, 96.0], [8.7, 96.0], [8.8, 96.0], [8.9, 97.0], [9.0, 97.0], [9.1, 97.0], [9.2, 97.0], [9.3, 98.0], [9.4, 99.0], [9.5, 99.0], [9.6, 99.0], [9.7, 100.0], [9.8, 100.0], [9.9, 100.0], [10.0, 101.0], [10.1, 102.0], [10.2, 103.0], [10.3, 104.0], [10.4, 104.0], [10.5, 105.0], [10.6, 105.0], [10.7, 105.0], [10.8, 105.0], [10.9, 105.0], [11.0, 106.0], [11.1, 107.0], [11.2, 107.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 108.0], [11.7, 109.0], [11.8, 109.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 111.0], [12.3, 111.0], [12.4, 112.0], [12.5, 113.0], [12.6, 113.0], [12.7, 114.0], [12.8, 114.0], [12.9, 115.0], [13.0, 115.0], [13.1, 115.0], [13.2, 115.0], [13.3, 116.0], [13.4, 116.0], [13.5, 116.0], [13.6, 116.0], [13.7, 117.0], [13.8, 117.0], [13.9, 117.0], [14.0, 118.0], [14.1, 119.0], [14.2, 119.0], [14.3, 120.0], [14.4, 120.0], [14.5, 121.0], [14.6, 121.0], [14.7, 122.0], [14.8, 122.0], [14.9, 122.0], [15.0, 122.0], [15.1, 123.0], [15.2, 123.0], [15.3, 123.0], [15.4, 125.0], [15.5, 125.0], [15.6, 125.0], [15.7, 126.0], [15.8, 126.0], [15.9, 127.0], [16.0, 127.0], [16.1, 128.0], [16.2, 128.0], [16.3, 129.0], [16.4, 129.0], [16.5, 130.0], [16.6, 131.0], [16.7, 131.0], [16.8, 132.0], [16.9, 132.0], [17.0, 132.0], [17.1, 132.0], [17.2, 133.0], [17.3, 134.0], [17.4, 134.0], [17.5, 134.0], [17.6, 134.0], [17.7, 135.0], [17.8, 135.0], [17.9, 135.0], [18.0, 136.0], [18.1, 136.0], [18.2, 137.0], [18.3, 138.0], [18.4, 139.0], [18.5, 140.0], [18.6, 140.0], [18.7, 141.0], [18.8, 141.0], [18.9, 142.0], [19.0, 142.0], [19.1, 142.0], [19.2, 143.0], [19.3, 143.0], [19.4, 143.0], [19.5, 144.0], [19.6, 144.0], [19.7, 145.0], [19.8, 145.0], [19.9, 145.0], [20.0, 146.0], [20.1, 146.0], [20.2, 147.0], [20.3, 148.0], [20.4, 149.0], [20.5, 149.0], [20.6, 150.0], [20.7, 150.0], [20.8, 150.0], [20.9, 151.0], [21.0, 151.0], [21.1, 151.0], [21.2, 152.0], [21.3, 152.0], [21.4, 152.0], [21.5, 153.0], [21.6, 153.0], [21.7, 154.0], [21.8, 154.0], [21.9, 154.0], [22.0, 154.0], [22.1, 154.0], [22.2, 154.0], [22.3, 155.0], [22.4, 155.0], [22.5, 156.0], [22.6, 156.0], [22.7, 157.0], [22.8, 157.0], [22.9, 157.0], [23.0, 158.0], [23.1, 158.0], [23.2, 159.0], [23.3, 159.0], [23.4, 159.0], [23.5, 159.0], [23.6, 159.0], [23.7, 160.0], [23.8, 161.0], [23.9, 161.0], [24.0, 161.0], [24.1, 162.0], [24.2, 163.0], [24.3, 163.0], [24.4, 164.0], [24.5, 165.0], [24.6, 165.0], [24.7, 165.0], [24.8, 165.0], [24.9, 165.0], [25.0, 166.0], [25.1, 166.0], [25.2, 167.0], [25.3, 167.0], [25.4, 167.0], [25.5, 168.0], [25.6, 168.0], [25.7, 168.0], [25.8, 168.0], [25.9, 169.0], [26.0, 170.0], [26.1, 170.0], [26.2, 171.0], [26.3, 171.0], [26.4, 172.0], [26.5, 172.0], [26.6, 172.0], [26.7, 174.0], [26.8, 174.0], [26.9, 174.0], [27.0, 174.0], [27.1, 175.0], [27.2, 175.0], [27.3, 175.0], [27.4, 175.0], [27.5, 175.0], [27.6, 176.0], [27.7, 177.0], [27.8, 179.0], [27.9, 180.0], [28.0, 181.0], [28.1, 181.0], [28.2, 181.0], [28.3, 182.0], [28.4, 182.0], [28.5, 183.0], [28.6, 183.0], [28.7, 184.0], [28.8, 184.0], [28.9, 184.0], [29.0, 184.0], [29.1, 185.0], [29.2, 185.0], [29.3, 186.0], [29.4, 186.0], [29.5, 186.0], [29.6, 187.0], [29.7, 187.0], [29.8, 188.0], [29.9, 190.0], [30.0, 190.0], [30.1, 190.0], [30.2, 190.0], [30.3, 191.0], [30.4, 192.0], [30.5, 192.0], [30.6, 192.0], [30.7, 192.0], [30.8, 193.0], [30.9, 193.0], [31.0, 194.0], [31.1, 194.0], [31.2, 195.0], [31.3, 196.0], [31.4, 197.0], [31.5, 197.0], [31.6, 197.0], [31.7, 198.0], [31.8, 198.0], [31.9, 198.0], [32.0, 199.0], [32.1, 199.0], [32.2, 199.0], [32.3, 200.0], [32.4, 200.0], [32.5, 200.0], [32.6, 201.0], [32.7, 201.0], [32.8, 202.0], [32.9, 203.0], [33.0, 203.0], [33.1, 204.0], [33.2, 204.0], [33.3, 205.0], [33.4, 205.0], [33.5, 205.0], [33.6, 205.0], [33.7, 206.0], [33.8, 206.0], [33.9, 206.0], [34.0, 207.0], [34.1, 208.0], [34.2, 208.0], [34.3, 209.0], [34.4, 209.0], [34.5, 210.0], [34.6, 210.0], [34.7, 210.0], [34.8, 210.0], [34.9, 210.0], [35.0, 211.0], [35.1, 213.0], [35.2, 213.0], [35.3, 213.0], [35.4, 213.0], [35.5, 213.0], [35.6, 214.0], [35.7, 214.0], [35.8, 214.0], [35.9, 214.0], [36.0, 215.0], [36.1, 215.0], [36.2, 215.0], [36.3, 216.0], [36.4, 216.0], [36.5, 216.0], [36.6, 217.0], [36.7, 217.0], [36.8, 218.0], [36.9, 218.0], [37.0, 219.0], [37.1, 219.0], [37.2, 220.0], [37.3, 221.0], [37.4, 221.0], [37.5, 221.0], [37.6, 222.0], [37.7, 222.0], [37.8, 222.0], [37.9, 223.0], [38.0, 223.0], [38.1, 223.0], [38.2, 224.0], [38.3, 224.0], [38.4, 224.0], [38.5, 224.0], [38.6, 225.0], [38.7, 225.0], [38.8, 226.0], [38.9, 226.0], [39.0, 227.0], [39.1, 227.0], [39.2, 227.0], [39.3, 228.0], [39.4, 228.0], [39.5, 228.0], [39.6, 228.0], [39.7, 229.0], [39.8, 230.0], [39.9, 230.0], [40.0, 230.0], [40.1, 230.0], [40.2, 231.0], [40.3, 231.0], [40.4, 232.0], [40.5, 232.0], [40.6, 232.0], [40.7, 233.0], [40.8, 233.0], [40.9, 234.0], [41.0, 234.0], [41.1, 235.0], [41.2, 235.0], [41.3, 236.0], [41.4, 236.0], [41.5, 238.0], [41.6, 239.0], [41.7, 239.0], [41.8, 240.0], [41.9, 241.0], [42.0, 241.0], [42.1, 242.0], [42.2, 242.0], [42.3, 243.0], [42.4, 243.0], [42.5, 243.0], [42.6, 244.0], [42.7, 244.0], [42.8, 245.0], [42.9, 245.0], [43.0, 246.0], [43.1, 246.0], [43.2, 246.0], [43.3, 248.0], [43.4, 248.0], [43.5, 249.0], [43.6, 249.0], [43.7, 250.0], [43.8, 250.0], [43.9, 250.0], [44.0, 251.0], [44.1, 252.0], [44.2, 252.0], [44.3, 252.0], [44.4, 253.0], [44.5, 253.0], [44.6, 253.0], [44.7, 254.0], [44.8, 254.0], [44.9, 255.0], [45.0, 255.0], [45.1, 256.0], [45.2, 256.0], [45.3, 256.0], [45.4, 256.0], [45.5, 257.0], [45.6, 258.0], [45.7, 258.0], [45.8, 259.0], [45.9, 260.0], [46.0, 261.0], [46.1, 261.0], [46.2, 261.0], [46.3, 262.0], [46.4, 262.0], [46.5, 263.0], [46.6, 263.0], [46.7, 264.0], [46.8, 264.0], [46.9, 266.0], [47.0, 267.0], [47.1, 267.0], [47.2, 267.0], [47.3, 267.0], [47.4, 268.0], [47.5, 268.0], [47.6, 268.0], [47.7, 270.0], [47.8, 271.0], [47.9, 271.0], [48.0, 271.0], [48.1, 272.0], [48.2, 273.0], [48.3, 273.0], [48.4, 273.0], [48.5, 273.0], [48.6, 274.0], [48.7, 275.0], [48.8, 275.0], [48.9, 275.0], [49.0, 275.0], [49.1, 276.0], [49.2, 277.0], [49.3, 277.0], [49.4, 277.0], [49.5, 278.0], [49.6, 278.0], [49.7, 278.0], [49.8, 279.0], [49.9, 279.0], [50.0, 279.0], [50.1, 281.0], [50.2, 281.0], [50.3, 282.0], [50.4, 282.0], [50.5, 282.0], [50.6, 282.0], [50.7, 283.0], [50.8, 283.0], [50.9, 284.0], [51.0, 284.0], [51.1, 285.0], [51.2, 285.0], [51.3, 285.0], [51.4, 286.0], [51.5, 286.0], [51.6, 287.0], [51.7, 289.0], [51.8, 289.0], [51.9, 289.0], [52.0, 290.0], [52.1, 290.0], [52.2, 290.0], [52.3, 291.0], [52.4, 292.0], [52.5, 293.0], [52.6, 293.0], [52.7, 294.0], [52.8, 295.0], [52.9, 295.0], [53.0, 296.0], [53.1, 297.0], [53.2, 297.0], [53.3, 297.0], [53.4, 298.0], [53.5, 299.0], [53.6, 299.0], [53.7, 299.0], [53.8, 300.0], [53.9, 300.0], [54.0, 300.0], [54.1, 300.0], [54.2, 301.0], [54.3, 301.0], [54.4, 302.0], [54.5, 302.0], [54.6, 302.0], [54.7, 303.0], [54.8, 303.0], [54.9, 303.0], [55.0, 304.0], [55.1, 304.0], [55.2, 304.0], [55.3, 305.0], [55.4, 306.0], [55.5, 306.0], [55.6, 307.0], [55.7, 308.0], [55.8, 308.0], [55.9, 308.0], [56.0, 308.0], [56.1, 308.0], [56.2, 309.0], [56.3, 309.0], [56.4, 310.0], [56.5, 310.0], [56.6, 310.0], [56.7, 311.0], [56.8, 311.0], [56.9, 312.0], [57.0, 312.0], [57.1, 312.0], [57.2, 313.0], [57.3, 313.0], [57.4, 314.0], [57.5, 315.0], [57.6, 315.0], [57.7, 315.0], [57.8, 315.0], [57.9, 316.0], [58.0, 316.0], [58.1, 317.0], [58.2, 317.0], [58.3, 318.0], [58.4, 318.0], [58.5, 318.0], [58.6, 319.0], [58.7, 319.0], [58.8, 320.0], [58.9, 320.0], [59.0, 322.0], [59.1, 322.0], [59.2, 323.0], [59.3, 323.0], [59.4, 324.0], [59.5, 324.0], [59.6, 325.0], [59.7, 325.0], [59.8, 326.0], [59.9, 326.0], [60.0, 327.0], [60.1, 327.0], [60.2, 327.0], [60.3, 328.0], [60.4, 328.0], [60.5, 328.0], [60.6, 329.0], [60.7, 329.0], [60.8, 330.0], [60.9, 330.0], [61.0, 331.0], [61.1, 331.0], [61.2, 331.0], [61.3, 332.0], [61.4, 332.0], [61.5, 332.0], [61.6, 333.0], [61.7, 334.0], [61.8, 334.0], [61.9, 334.0], [62.0, 335.0], [62.1, 335.0], [62.2, 335.0], [62.3, 337.0], [62.4, 338.0], [62.5, 338.0], [62.6, 339.0], [62.7, 339.0], [62.8, 339.0], [62.9, 340.0], [63.0, 341.0], [63.1, 341.0], [63.2, 341.0], [63.3, 342.0], [63.4, 342.0], [63.5, 342.0], [63.6, 343.0], [63.7, 344.0], [63.8, 344.0], [63.9, 346.0], [64.0, 348.0], [64.1, 348.0], [64.2, 348.0], [64.3, 349.0], [64.4, 350.0], [64.5, 350.0], [64.6, 351.0], [64.7, 352.0], [64.8, 352.0], [64.9, 352.0], [65.0, 353.0], [65.1, 354.0], [65.2, 355.0], [65.3, 355.0], [65.4, 355.0], [65.5, 356.0], [65.6, 356.0], [65.7, 356.0], [65.8, 357.0], [65.9, 357.0], [66.0, 357.0], [66.1, 357.0], [66.2, 358.0], [66.3, 359.0], [66.4, 359.0], [66.5, 359.0], [66.6, 360.0], [66.7, 361.0], [66.8, 361.0], [66.9, 362.0], [67.0, 363.0], [67.1, 363.0], [67.2, 363.0], [67.3, 364.0], [67.4, 364.0], [67.5, 365.0], [67.6, 365.0], [67.7, 366.0], [67.8, 366.0], [67.9, 367.0], [68.0, 367.0], [68.1, 368.0], [68.2, 368.0], [68.3, 369.0], [68.4, 369.0], [68.5, 370.0], [68.6, 370.0], [68.7, 370.0], [68.8, 371.0], [68.9, 372.0], [69.0, 372.0], [69.1, 372.0], [69.2, 373.0], [69.3, 373.0], [69.4, 373.0], [69.5, 375.0], [69.6, 375.0], [69.7, 375.0], [69.8, 376.0], [69.9, 376.0], [70.0, 376.0], [70.1, 377.0], [70.2, 378.0], [70.3, 378.0], [70.4, 379.0], [70.5, 379.0], [70.6, 380.0], [70.7, 380.0], [70.8, 381.0], [70.9, 381.0], [71.0, 382.0], [71.1, 382.0], [71.2, 383.0], [71.3, 383.0], [71.4, 383.0], [71.5, 383.0], [71.6, 383.0], [71.7, 384.0], [71.8, 384.0], [71.9, 384.0], [72.0, 384.0], [72.1, 385.0], [72.2, 385.0], [72.3, 386.0], [72.4, 386.0], [72.5, 386.0], [72.6, 386.0], [72.7, 387.0], [72.8, 387.0], [72.9, 388.0], [73.0, 389.0], [73.1, 389.0], [73.2, 389.0], [73.3, 389.0], [73.4, 390.0], [73.5, 390.0], [73.6, 390.0], [73.7, 390.0], [73.8, 391.0], [73.9, 391.0], [74.0, 391.0], [74.1, 391.0], [74.2, 392.0], [74.3, 392.0], [74.4, 392.0], [74.5, 394.0], [74.6, 395.0], [74.7, 395.0], [74.8, 396.0], [74.9, 397.0], [75.0, 398.0], [75.1, 399.0], [75.2, 399.0], [75.3, 399.0], [75.4, 399.0], [75.5, 400.0], [75.6, 400.0], [75.7, 400.0], [75.8, 400.0], [75.9, 401.0], [76.0, 402.0], [76.1, 402.0], [76.2, 402.0], [76.3, 403.0], [76.4, 403.0], [76.5, 404.0], [76.6, 404.0], [76.7, 405.0], [76.8, 405.0], [76.9, 405.0], [77.0, 405.0], [77.1, 406.0], [77.2, 407.0], [77.3, 407.0], [77.4, 409.0], [77.5, 410.0], [77.6, 410.0], [77.7, 411.0], [77.8, 411.0], [77.9, 411.0], [78.0, 411.0], [78.1, 412.0], [78.2, 413.0], [78.3, 413.0], [78.4, 413.0], [78.5, 413.0], [78.6, 414.0], [78.7, 414.0], [78.8, 415.0], [78.9, 415.0], [79.0, 415.0], [79.1, 415.0], [79.2, 416.0], [79.3, 416.0], [79.4, 416.0], [79.5, 418.0], [79.6, 419.0], [79.7, 419.0], [79.8, 419.0], [79.9, 420.0], [80.0, 420.0], [80.1, 420.0], [80.2, 421.0], [80.3, 421.0], [80.4, 422.0], [80.5, 422.0], [80.6, 423.0], [80.7, 424.0], [80.8, 425.0], [80.9, 425.0], [81.0, 425.0], [81.1, 425.0], [81.2, 425.0], [81.3, 426.0], [81.4, 426.0], [81.5, 427.0], [81.6, 428.0], [81.7, 429.0], [81.8, 430.0], [81.9, 430.0], [82.0, 430.0], [82.1, 432.0], [82.2, 433.0], [82.3, 433.0], [82.4, 433.0], [82.5, 433.0], [82.6, 434.0], [82.7, 434.0], [82.8, 435.0], [82.9, 437.0], [83.0, 437.0], [83.1, 437.0], [83.2, 438.0], [83.3, 439.0], [83.4, 439.0], [83.5, 439.0], [83.6, 439.0], [83.7, 439.0], [83.8, 441.0], [83.9, 441.0], [84.0, 441.0], [84.1, 441.0], [84.2, 442.0], [84.3, 443.0], [84.4, 443.0], [84.5, 443.0], [84.6, 444.0], [84.7, 444.0], [84.8, 445.0], [84.9, 445.0], [85.0, 445.0], [85.1, 445.0], [85.2, 446.0], [85.3, 447.0], [85.4, 447.0], [85.5, 448.0], [85.6, 448.0], [85.7, 448.0], [85.8, 448.0], [85.9, 448.0], [86.0, 449.0], [86.1, 450.0], [86.2, 450.0], [86.3, 450.0], [86.4, 450.0], [86.5, 450.0], [86.6, 450.0], [86.7, 451.0], [86.8, 451.0], [86.9, 452.0], [87.0, 452.0], [87.1, 453.0], [87.2, 453.0], [87.3, 454.0], [87.4, 454.0], [87.5, 454.0], [87.6, 454.0], [87.7, 454.0], [87.8, 455.0], [87.9, 455.0], [88.0, 456.0], [88.1, 456.0], [88.2, 456.0], [88.3, 458.0], [88.4, 458.0], [88.5, 458.0], [88.6, 459.0], [88.7, 460.0], [88.8, 460.0], [88.9, 461.0], [89.0, 461.0], [89.1, 461.0], [89.2, 461.0], [89.3, 461.0], [89.4, 461.0], [89.5, 462.0], [89.6, 462.0], [89.7, 462.0], [89.8, 463.0], [89.9, 463.0], [90.0, 464.0], [90.1, 464.0], [90.2, 464.0], [90.3, 465.0], [90.4, 465.0], [90.5, 465.0], [90.6, 466.0], [90.7, 466.0], [90.8, 467.0], [90.9, 467.0], [91.0, 467.0], [91.1, 468.0], [91.2, 469.0], [91.3, 470.0], [91.4, 470.0], [91.5, 471.0], [91.6, 472.0], [91.7, 472.0], [91.8, 472.0], [91.9, 472.0], [92.0, 473.0], [92.1, 473.0], [92.2, 474.0], [92.3, 475.0], [92.4, 475.0], [92.5, 475.0], [92.6, 475.0], [92.7, 476.0], [92.8, 476.0], [92.9, 477.0], [93.0, 478.0], [93.1, 479.0], [93.2, 479.0], [93.3, 480.0], [93.4, 480.0], [93.5, 480.0], [93.6, 481.0], [93.7, 481.0], [93.8, 481.0], [93.9, 481.0], [94.0, 482.0], [94.1, 482.0], [94.2, 483.0], [94.3, 483.0], [94.4, 483.0], [94.5, 484.0], [94.6, 484.0], [94.7, 485.0], [94.8, 485.0], [94.9, 485.0], [95.0, 486.0], [95.1, 486.0], [95.2, 487.0], [95.3, 487.0], [95.4, 487.0], [95.5, 487.0], [95.6, 487.0], [95.7, 488.0], [95.8, 488.0], [95.9, 489.0], [96.0, 489.0], [96.1, 490.0], [96.2, 490.0], [96.3, 490.0], [96.4, 490.0], [96.5, 491.0], [96.6, 491.0], [96.7, 491.0], [96.8, 492.0], [96.9, 492.0], [97.0, 492.0], [97.1, 493.0], [97.2, 493.0], [97.3, 493.0], [97.4, 494.0], [97.5, 494.0], [97.6, 494.0], [97.7, 495.0], [97.8, 495.0], [97.9, 496.0], [98.0, 496.0], [98.1, 496.0], [98.2, 497.0], [98.3, 497.0], [98.4, 498.0], [98.5, 498.0], [98.6, 498.0], [98.7, 499.0], [98.8, 499.0], [98.9, 499.0], [99.0, 500.0], [99.1, 500.0], [99.2, 500.0], [99.3, 501.0], [99.4, 501.0], [99.5, 501.0], [99.6, 501.0], [99.7, 502.0], [99.8, 503.0], [99.9, 504.0]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 1723.0, "series": [{"data": [[0.0, 1723.0], [500.0, 20.0]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[0.0, 1721.0], [500.0, 13.0]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[0.0, 1706.0], [500.0, 18.0]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5168.0, "series": [{"data": [[1.0, 33.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 5168.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 55.20588235294119, "minX": 1.508055239E12, "maxY": 100.0, "series": [{"data": [[1.508055249E12, 100.0], [1.508055292E12, 100.0], [1.508055253E12, 100.0], [1.508055296E12, 100.0], [1.508055251E12, 100.0], [1.508055294E12, 100.0], [1.508055245E12, 100.0], [1.508055288E12, 100.0], [1.508055243E12, 100.0], [1.508055286E12, 100.0], [1.508055247E12, 100.0], [1.50805529E12, 100.0], [1.508055239E12, 99.30000000000001], [1.508055282E12, 100.0], [1.508055241E12, 100.0], [1.508055284E12, 100.0], [1.508055276E12, 100.0], [1.50805528E12, 100.0], [1.508055278E12, 100.0], [1.508055272E12, 100.0], [1.50805527E12, 100.0], [1.508055274E12, 100.0], [1.508055266E12, 100.0], [1.508055268E12, 100.0], [1.50805526E12, 100.0], [1.508055264E12, 100.0], [1.508055262E12, 100.0], [1.508055256E12, 100.0], [1.508055297E12, 100.0], [1.508055254E12, 100.0], [1.508055258E12, 100.0], [1.508055293E12, 100.0], [1.50805525E12, 100.0], [1.508055291E12, 100.0], [1.508055295E12, 100.0], [1.508055252E12, 100.0], [1.508055287E12, 100.0], [1.508055244E12, 100.0], [1.508055248E12, 100.0], [1.508055289E12, 100.0], [1.508055246E12, 100.0], [1.50805524E12, 100.0], [1.508055281E12, 100.0], [1.508055285E12, 100.0], [1.508055242E12, 100.0], [1.508055283E12, 100.0], [1.508055277E12, 100.0], [1.508055275E12, 100.0], [1.508055279E12, 100.0], [1.508055271E12, 100.0], [1.508055273E12, 100.0], [1.508055265E12, 100.0], [1.508055269E12, 100.0], [1.508055267E12, 100.0], [1.508055261E12, 100.0], [1.508055259E12, 100.0], [1.508055263E12, 100.0], [1.508055255E12, 100.0], [1.508055298E12, 55.20588235294119], [1.508055257E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.508055298E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 92.0, "minX": 3.0, "maxY": 495.0, "series": [{"data": [[68.0, 419.0], [40.0, 204.0], [86.0, 104.0], [21.0, 486.0], [44.0, 246.0], [95.0, 247.5], [93.0, 455.0], [99.0, 273.5], [100.0, 281.48208092485567], [54.0, 368.5], [31.0, 495.0]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[99.75846242111275, 281.7854274239814]], "isOverall": false, "label": "CART - 0010 - Add to Cart-Aggregated", "isController": false}, {"data": [[16.0, 325.0], [17.0, 430.0], [37.0, 492.0], [83.0, 137.0], [85.0, 188.0], [90.0, 129.0], [24.0, 333.0], [3.0, 399.0], [100.0, 270.73897911832915], [13.0, 439.0], [62.0, 283.0]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[99.67128027681659, 270.99711649365594]], "isOverall": false, "label": "CART - 0020 - Change Quatity-Aggregated", "isController": false}, {"data": [[12.0, 473.0], [50.0, 230.0], [62.0, 255.0], [64.0, 349.0], [70.0, 454.0], [69.0, 439.0], [75.0, 409.0], [77.0, 462.0], [81.0, 129.0], [94.0, 92.0], [23.0, 358.0], [6.0, 415.0], [100.0, 280.9228521332551]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}, {"data": [[99.6792343387471, 281.3648491879348]], "isOverall": false, "label": "CART - 0030 - Place Order-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.508055239E12, "maxY": 11514.0, "series": [{"data": [[1.508055249E12, 9576.0], [1.508055292E12, 10260.0], [1.508055253E12, 11058.0], [1.508055296E12, 10032.0], [1.508055251E12, 11058.0], [1.508055294E12, 10146.0], [1.508055245E12, 10146.0], [1.508055288E12, 10830.0], [1.508055243E12, 11514.0], [1.508055286E12, 11286.0], [1.508055247E12, 11058.0], [1.50805529E12, 9804.0], [1.508055239E12, 3420.0], [1.508055282E12, 9690.0], [1.508055241E12, 9120.0], [1.508055284E12, 9576.0], [1.508055276E12, 9462.0], [1.50805528E12, 9690.0], [1.508055278E12, 10032.0], [1.508055272E12, 9576.0], [1.50805527E12, 9918.0], [1.508055274E12, 9690.0], [1.508055266E12, 9120.0], [1.508055268E12, 10374.0], [1.50805526E12, 9348.0], [1.508055264E12, 11172.0], [1.508055262E12, 10602.0], [1.508055256E12, 10602.0], [1.508055297E12, 10260.0], [1.508055254E12, 10374.0], [1.508055258E12, 9690.0], [1.508055293E12, 10716.0], [1.50805525E12, 10488.0], [1.508055291E12, 10944.0], [1.508055295E12, 10032.0], [1.508055252E12, 9348.0], [1.508055287E12, 9462.0], [1.508055244E12, 9348.0], [1.508055248E12, 9918.0], [1.508055289E12, 9690.0], [1.508055246E12, 10032.0], [1.50805524E12, 5244.0], [1.508055281E12, 11172.0], [1.508055285E12, 9690.0], [1.508055242E12, 9804.0], [1.508055283E12, 10944.0], [1.508055277E12, 10374.0], [1.508055275E12, 10830.0], [1.508055279E12, 10602.0], [1.508055271E12, 10146.0], [1.508055273E12, 11172.0], [1.508055265E12, 10374.0], [1.508055269E12, 10830.0], [1.508055267E12, 10602.0], [1.508055261E12, 10602.0], [1.508055259E12, 10146.0], [1.508055263E12, 9348.0], [1.508055255E12, 9006.0], [1.508055298E12, 3876.0], [1.508055257E12, 9690.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.508055249E12, 0.0], [1.508055292E12, 0.0], [1.508055253E12, 0.0], [1.508055296E12, 0.0], [1.508055251E12, 0.0], [1.508055294E12, 0.0], [1.508055245E12, 0.0], [1.508055288E12, 0.0], [1.508055243E12, 0.0], [1.508055286E12, 0.0], [1.508055247E12, 0.0], [1.50805529E12, 0.0], [1.508055239E12, 0.0], [1.508055282E12, 0.0], [1.508055241E12, 0.0], [1.508055284E12, 0.0], [1.508055276E12, 0.0], [1.50805528E12, 0.0], [1.508055278E12, 0.0], [1.508055272E12, 0.0], [1.50805527E12, 0.0], [1.508055274E12, 0.0], [1.508055266E12, 0.0], [1.508055268E12, 0.0], [1.50805526E12, 0.0], [1.508055264E12, 0.0], [1.508055262E12, 0.0], [1.508055256E12, 0.0], [1.508055297E12, 0.0], [1.508055254E12, 0.0], [1.508055258E12, 0.0], [1.508055293E12, 0.0], [1.50805525E12, 0.0], [1.508055291E12, 0.0], [1.508055295E12, 0.0], [1.508055252E12, 0.0], [1.508055287E12, 0.0], [1.508055244E12, 0.0], [1.508055248E12, 0.0], [1.508055289E12, 0.0], [1.508055246E12, 0.0], [1.50805524E12, 0.0], [1.508055281E12, 0.0], [1.508055285E12, 0.0], [1.508055242E12, 0.0], [1.508055283E12, 0.0], [1.508055277E12, 0.0], [1.508055275E12, 0.0], [1.508055279E12, 0.0], [1.508055271E12, 0.0], [1.508055273E12, 0.0], [1.508055265E12, 0.0], [1.508055269E12, 0.0], [1.508055267E12, 0.0], [1.508055261E12, 0.0], [1.508055259E12, 0.0], [1.508055263E12, 0.0], [1.508055255E12, 0.0], [1.508055298E12, 0.0], [1.508055257E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.508055298E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 205.57692307692307, "minX": 1.508055239E12, "maxY": 341.90909090909093, "series": [{"data": [[1.508055249E12, 268.3103448275862], [1.508055292E12, 268.53333333333336], [1.508055253E12, 276.125], [1.508055296E12, 270.2068965517241], [1.508055251E12, 291.65625], [1.508055294E12, 259.62068965517244], [1.508055245E12, 301.0322580645161], [1.508055288E12, 322.94117647058823], [1.508055243E12, 223.4375], [1.508055286E12, 288.8787878787878], [1.508055247E12, 280.56666666666666], [1.50805529E12, 289.5999999999999], [1.508055239E12, 261.40000000000003], [1.508055282E12, 256.5357142857143], [1.508055241E12, 267.9354838709679], [1.508055284E12, 314.4375], [1.508055276E12, 278.75000000000006], [1.50805528E12, 284.4333333333334], [1.508055278E12, 298.21874999999994], [1.508055272E12, 293.95833333333337], [1.50805527E12, 292.074074074074], [1.508055274E12, 332.9310344827586], [1.508055266E12, 316.8666666666667], [1.508055268E12, 262.7], [1.50805526E12, 313.96153846153845], [1.508055264E12, 291.09375000000006], [1.508055262E12, 273.27272727272725], [1.508055256E12, 294.07142857142856], [1.508055297E12, 310.30303030303037], [1.508055254E12, 226.1], [1.508055258E12, 272.6551724137931], [1.508055293E12, 262.54838709677426], [1.50805525E12, 317.6333333333334], [1.508055291E12, 242.34375000000003], [1.508055295E12, 286.7241379310344], [1.508055252E12, 291.23333333333335], [1.508055287E12, 307.0714285714285], [1.508055244E12, 269.4827586206897], [1.508055248E12, 242.73333333333335], [1.508055289E12, 275.53846153846155], [1.508055246E12, 276.8888888888889], [1.50805524E12, 315.0], [1.508055281E12, 248.58064516129033], [1.508055285E12, 248.29166666666669], [1.508055242E12, 267.6296296296296], [1.508055283E12, 305.375], [1.508055277E12, 259.31034482758616], [1.508055275E12, 236.96551724137933], [1.508055279E12, 302.8275862068965], [1.508055271E12, 285.72727272727275], [1.508055273E12, 276.3142857142857], [1.508055265E12, 304.9310344827586], [1.508055269E12, 242.91176470588238], [1.508055267E12, 276.5357142857142], [1.508055261E12, 320.3333333333333], [1.508055259E12, 295.84375], [1.508055263E12, 305.0], [1.508055255E12, 303.12], [1.508055298E12, 341.90909090909093], [1.508055257E12, 259.4]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[1.508055249E12, 260.55999999999995], [1.508055292E12, 255.41935483870967], [1.508055253E12, 244.25806451612894], [1.508055296E12, 274.78787878787887], [1.508055251E12, 228.22857142857146], [1.508055294E12, 267.5172413793104], [1.508055245E12, 226.7037037037037], [1.508055288E12, 297.3870967741935], [1.508055243E12, 234.14705882352942], [1.508055286E12, 275.4000000000001], [1.508055247E12, 259.09999999999997], [1.50805529E12, 322.1851851851852], [1.508055239E12, 251.45454545454547], [1.508055282E12, 243.03225806451616], [1.508055241E12, 285.8399999999999], [1.508055284E12, 254.26923076923075], [1.508055276E12, 299.8148148148148], [1.50805528E12, 273.7142857142857], [1.508055278E12, 281.89285714285717], [1.508055272E12, 298.46666666666675], [1.50805527E12, 286.4516129032258], [1.508055274E12, 271.24999999999994], [1.508055266E12, 263.58333333333337], [1.508055268E12, 270.28125000000006], [1.50805526E12, 270.53846153846155], [1.508055264E12, 220.63636363636363], [1.508055262E12, 276.89655172413796], [1.508055256E12, 262.77419354838713], [1.508055297E12, 276.41379310344837], [1.508055254E12, 290.0625], [1.508055258E12, 297.0344827586207], [1.508055293E12, 264.3870967741936], [1.50805525E12, 271.96875], [1.508055291E12, 248.2727272727273], [1.508055295E12, 267.4642857142858], [1.508055252E12, 283.64], [1.508055287E12, 253.9642857142857], [1.508055244E12, 289.39285714285717], [1.508055248E12, 284.6451612903227], [1.508055289E12, 288.13793103448273], [1.508055246E12, 305.59375000000006], [1.50805524E12, 307.14285714285717], [1.508055281E12, 280.7096774193549], [1.508055285E12, 269.3103448275862], [1.508055242E12, 276.45161290322585], [1.508055283E12, 257.2666666666667], [1.508055277E12, 287.8666666666666], [1.508055275E12, 257.1764705882353], [1.508055279E12, 259.4545454545455], [1.508055271E12, 270.7241379310344], [1.508055273E12, 258.5161290322581], [1.508055265E12, 282.6129032258065], [1.508055269E12, 205.57692307692307], [1.508055267E12, 307.6857142857142], [1.508055261E12, 272.090909090909], [1.508055259E12, 270.8709677419355], [1.508055263E12, 296.8888888888889], [1.508055255E12, 273.0384615384615], [1.508055298E12, 315.50000000000006], [1.508055257E12, 281.78571428571416]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[1.508055249E12, 257.5333333333334], [1.508055292E12, 226.24137931034477], [1.508055253E12, 290.94117647058823], [1.508055296E12, 254.57692307692307], [1.508055251E12, 275.50000000000006], [1.508055294E12, 271.00000000000006], [1.508055245E12, 313.3870967741935], [1.508055288E12, 255.13333333333327], [1.508055243E12, 284.34285714285716], [1.508055286E12, 261.45161290322585], [1.508055247E12, 286.7297297297297], [1.50805529E12, 310.13793103448273], [1.508055239E12, 214.25], [1.508055282E12, 246.3461538461538], [1.508055241E12, 253.5], [1.508055284E12, 275.0], [1.508055276E12, 279.0357142857143], [1.50805528E12, 301.9259259259259], [1.508055278E12, 301.0], [1.508055272E12, 292.1333333333333], [1.50805527E12, 297.79310344827593], [1.508055274E12, 302.0], [1.508055266E12, 260.49999999999994], [1.508055268E12, 301.37931034482756], [1.50805526E12, 303.23333333333323], [1.508055264E12, 251.1818181818182], [1.508055262E12, 255.1935483870968], [1.508055256E12, 260.35294117647067], [1.508055297E12, 274.2857142857143], [1.508055254E12, 325.24137931034477], [1.508055258E12, 288.1481481481482], [1.508055293E12, 283.90625], [1.50805525E12, 272.8], [1.508055291E12, 273.54838709677415], [1.508055295E12, 246.83870967741936], [1.508055252E12, 265.3333333333333], [1.508055287E12, 265.25925925925924], [1.508055244E12, 293.68000000000006], [1.508055248E12, 283.4615384615385], [1.508055289E12, 312.7000000000001], [1.508055246E12, 305.4827586206897], [1.50805524E12, 328.7333333333333], [1.508055281E12, 272.5555555555556], [1.508055285E12, 273.71874999999994], [1.508055242E12, 310.57142857142867], [1.508055283E12, 279.58823529411757], [1.508055277E12, 306.5625], [1.508055275E12, 309.06249999999994], [1.508055279E12, 292.64516129032256], [1.508055271E12, 263.4814814814815], [1.508055273E12, 295.93750000000006], [1.508055265E12, 273.58064516129036], [1.508055269E12, 275.77142857142854], [1.508055267E12, 241.2], [1.508055261E12, 301.2333333333334], [1.508055259E12, 293.3461538461538], [1.508055263E12, 312.7407407407407], [1.508055255E12, 270.6428571428571], [1.508055298E12, 339.53846153846155], [1.508055257E12, 261.962962962963]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.508055298E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 18.666666666666668, "minX": 1.508055239E12, "maxY": 32.32142857142857, "series": [{"data": [[1.508055249E12, 22.931034482758623], [1.508055292E12, 25.166666666666664], [1.508055253E12, 25.249999999999993], [1.508055296E12, 25.275862068965516], [1.508055251E12, 25.0], [1.508055294E12, 25.344827586206897], [1.508055245E12, 24.935483870967744], [1.508055288E12, 30.999999999999996], [1.508055243E12, 27.375], [1.508055286E12, 22.81818181818182], [1.508055247E12, 22.13333333333333], [1.50805529E12, 19.56666666666667], [1.508055239E12, 24.200000000000003], [1.508055282E12, 23.53571428571429], [1.508055241E12, 21.87096774193548], [1.508055284E12, 24.906249999999993], [1.508055276E12, 25.321428571428573], [1.50805528E12, 22.133333333333336], [1.508055278E12, 25.0625], [1.508055272E12, 22.791666666666664], [1.50805527E12, 26.14814814814815], [1.508055274E12, 28.0], [1.508055266E12, 24.800000000000004], [1.508055268E12, 26.6], [1.50805526E12, 24.230769230769234], [1.508055264E12, 27.874999999999996], [1.508055262E12, 24.181818181818183], [1.508055256E12, 27.999999999999996], [1.508055297E12, 25.030303030303035], [1.508055254E12, 23.833333333333336], [1.508055258E12, 22.241379310344822], [1.508055293E12, 22.90322580645161], [1.50805525E12, 27.166666666666675], [1.508055291E12, 28.812499999999993], [1.508055295E12, 22.344827586206897], [1.508055252E12, 21.399999999999995], [1.508055287E12, 22.999999999999996], [1.508055244E12, 29.31034482758621], [1.508055248E12, 25.799999999999997], [1.508055289E12, 25.769230769230774], [1.508055246E12, 22.25925925925926], [1.50805524E12, 30.823529411764707], [1.508055281E12, 22.451612903225804], [1.508055285E12, 27.375], [1.508055242E12, 24.14814814814815], [1.508055283E12, 25.468750000000004], [1.508055277E12, 20.000000000000004], [1.508055275E12, 26.17241379310345], [1.508055279E12, 24.620689655172413], [1.508055271E12, 24.606060606060602], [1.508055273E12, 26.54285714285714], [1.508055265E12, 25.000000000000004], [1.508055269E12, 25.91176470588235], [1.508055267E12, 29.571428571428577], [1.508055261E12, 26.53333333333333], [1.508055259E12, 24.4375], [1.508055263E12, 22.035714285714285], [1.508055255E12, 31.96], [1.508055298E12, 28.72727272727273], [1.508055257E12, 23.300000000000004]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[1.508055249E12, 25.84], [1.508055292E12, 28.387096774193548], [1.508055253E12, 25.354838709677427], [1.508055296E12, 23.515151515151516], [1.508055251E12, 28.800000000000004], [1.508055294E12, 24.241379310344833], [1.508055245E12, 26.7037037037037], [1.508055288E12, 26.580645161290324], [1.508055243E12, 25.26470588235294], [1.508055286E12, 22.628571428571433], [1.508055247E12, 22.933333333333334], [1.50805529E12, 22.814814814814817], [1.508055239E12, 27.818181818181824], [1.508055282E12, 24.612903225806452], [1.508055241E12, 26.679999999999996], [1.508055284E12, 24.499999999999996], [1.508055276E12, 25.40740740740741], [1.50805528E12, 25.03571428571428], [1.508055278E12, 25.42857142857143], [1.508055272E12, 24.699999999999996], [1.50805527E12, 21.612903225806456], [1.508055274E12, 24.678571428571423], [1.508055266E12, 27.5], [1.508055268E12, 26.812499999999996], [1.50805526E12, 22.653846153846157], [1.508055264E12, 26.636363636363637], [1.508055262E12, 22.44827586206896], [1.508055256E12, 25.096774193548388], [1.508055297E12, 24.68965517241379], [1.508055254E12, 24.312500000000004], [1.508055258E12, 25.0], [1.508055293E12, 24.741935483870968], [1.50805525E12, 20.96875], [1.508055291E12, 25.0], [1.508055295E12, 23.892857142857146], [1.508055252E12, 24.120000000000005], [1.508055287E12, 24.89285714285714], [1.508055244E12, 27.249999999999996], [1.508055248E12, 26.258064516129032], [1.508055289E12, 25.517241379310345], [1.508055246E12, 23.3125], [1.50805524E12, 24.642857142857146], [1.508055281E12, 29.903225806451612], [1.508055285E12, 23.034482758620683], [1.508055242E12, 24.129032258064516], [1.508055283E12, 28.166666666666668], [1.508055277E12, 21.36666666666667], [1.508055275E12, 25.97058823529412], [1.508055279E12, 26.848484848484848], [1.508055271E12, 29.06896551724138], [1.508055273E12, 21.612903225806452], [1.508055265E12, 28.419354838709676], [1.508055269E12, 26.57692307692308], [1.508055267E12, 26.828571428571426], [1.508055261E12, 23.0], [1.508055259E12, 24.87096774193548], [1.508055263E12, 24.296296296296298], [1.508055255E12, 23.73076923076923], [1.508055298E12, 31.999999999999996], [1.508055257E12, 22.821428571428573]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[1.508055249E12, 22.7], [1.508055292E12, 26.482758620689655], [1.508055253E12, 23.14705882352941], [1.508055296E12, 28.999999999999996], [1.508055251E12, 27.599999999999998], [1.508055294E12, 24.35483870967741], [1.508055245E12, 28.419354838709676], [1.508055288E12, 26.466666666666665], [1.508055243E12, 25.6], [1.508055286E12, 28.225806451612904], [1.508055247E12, 25.216216216216214], [1.50805529E12, 26.89655172413793], [1.508055239E12, 23.5], [1.508055282E12, 24.53846153846154], [1.508055241E12, 31.41666666666667], [1.508055284E12, 27.346153846153847], [1.508055276E12, 32.32142857142857], [1.50805528E12, 22.407407407407405], [1.508055278E12, 24.92857142857143], [1.508055272E12, 25.433333333333334], [1.50805527E12, 21.344827586206897], [1.508055274E12, 20.0], [1.508055266E12, 29.76923076923077], [1.508055268E12, 22.551724137931036], [1.50805526E12, 22.999999999999996], [1.508055264E12, 24.84848484848485], [1.508055262E12, 28.419354838709676], [1.508055256E12, 24.941176470588236], [1.508055297E12, 20.642857142857146], [1.508055254E12, 18.758620689655178], [1.508055258E12, 18.666666666666668], [1.508055293E12, 23.187500000000004], [1.50805525E12, 27.03333333333333], [1.508055291E12, 31.193548387096765], [1.508055295E12, 26.0], [1.508055252E12, 22.14814814814815], [1.508055287E12, 25.592592592592588], [1.508055244E12, 28.800000000000004], [1.508055248E12, 26.269230769230763], [1.508055289E12, 26.766666666666662], [1.508055246E12, 24.896551724137932], [1.50805524E12, 28.399999999999995], [1.508055281E12, 24.80555555555556], [1.508055285E12, 25.53125], [1.508055242E12, 30.642857142857146], [1.508055283E12, 26.382352941176475], [1.508055277E12, 25.531249999999996], [1.508055275E12, 28.84375], [1.508055279E12, 28.06451612903226], [1.508055271E12, 23.074074074074076], [1.508055273E12, 25.718749999999996], [1.508055265E12, 26.451612903225804], [1.508055269E12, 25.485714285714284], [1.508055267E12, 25.233333333333334], [1.508055261E12, 25.666666666666664], [1.508055259E12, 22.000000000000004], [1.508055263E12, 32.111111111111114], [1.508055255E12, 22.714285714285715], [1.508055298E12, 28.000000000000004], [1.508055257E12, 25.296296296296294]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.508055298E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2.272727272727273, "minX": 1.508055239E12, "maxY": 3.733333333333334, "series": [{"data": [[1.508055249E12, 2.9655172413793105], [1.508055292E12, 2.8666666666666667], [1.508055253E12, 2.9375], [1.508055296E12, 3.0000000000000004], [1.508055251E12, 2.9062500000000004], [1.508055294E12, 3.172413793103448], [1.508055245E12, 3.1290322580645156], [1.508055288E12, 2.9411764705882355], [1.508055243E12, 2.937499999999999], [1.508055286E12, 2.8181818181818175], [1.508055247E12, 3.6666666666666665], [1.50805529E12, 2.7], [1.508055239E12, 3.066666666666667], [1.508055282E12, 3.071428571428571], [1.508055241E12, 3.32258064516129], [1.508055284E12, 2.8437499999999996], [1.508055276E12, 3.642857142857143], [1.50805528E12, 2.966666666666667], [1.508055278E12, 2.9062499999999996], [1.508055272E12, 3.0000000000000004], [1.50805527E12, 3.148148148148148], [1.508055274E12, 3.1724137931034484], [1.508055266E12, 3.266666666666667], [1.508055268E12, 2.8], [1.50805526E12, 2.884615384615385], [1.508055264E12, 2.8437499999999996], [1.508055262E12, 2.7878787878787876], [1.508055256E12, 3.5357142857142856], [1.508055297E12, 2.6363636363636367], [1.508055254E12, 3.0], [1.508055258E12, 2.724137931034483], [1.508055293E12, 2.6774193548387095], [1.50805525E12, 2.533333333333334], [1.508055291E12, 3.28125], [1.508055295E12, 3.275862068965517], [1.508055252E12, 3.333333333333334], [1.508055287E12, 2.9642857142857153], [1.508055244E12, 3.1034482758620694], [1.508055248E12, 2.966666666666667], [1.508055289E12, 3.230769230769231], [1.508055246E12, 2.6296296296296293], [1.50805524E12, 3.1176470588235294], [1.508055281E12, 3.3548387096774195], [1.508055285E12, 2.708333333333334], [1.508055242E12, 3.6296296296296298], [1.508055283E12, 2.8437500000000004], [1.508055277E12, 2.4827586206896552], [1.508055275E12, 2.620689655172414], [1.508055279E12, 2.862068965517241], [1.508055271E12, 3.2121212121212124], [1.508055273E12, 2.5142857142857142], [1.508055265E12, 3.0], [1.508055269E12, 3.3235294117647056], [1.508055267E12, 2.8214285714285716], [1.508055261E12, 2.6333333333333337], [1.508055259E12, 2.9687500000000013], [1.508055263E12, 2.892857142857143], [1.508055255E12, 2.8400000000000003], [1.508055298E12, 2.272727272727273], [1.508055257E12, 2.999999999999999]], "isOverall": false, "label": "CART - 0010 - Add to Cart", "isController": false}, {"data": [[1.508055249E12, 2.9199999999999995], [1.508055292E12, 2.903225806451613], [1.508055253E12, 3.096774193548387], [1.508055296E12, 2.7878787878787876], [1.508055251E12, 2.7999999999999994], [1.508055294E12, 2.9655172413793105], [1.508055245E12, 2.8888888888888884], [1.508055288E12, 2.8387096774193545], [1.508055243E12, 3.382352941176471], [1.508055286E12, 2.6285714285714286], [1.508055247E12, 2.8666666666666667], [1.50805529E12, 2.6296296296296293], [1.508055239E12, 2.8181818181818183], [1.508055282E12, 3.2258064516129026], [1.508055241E12, 2.5200000000000005], [1.508055284E12, 2.8076923076923075], [1.508055276E12, 2.5185185185185186], [1.50805528E12, 3.071428571428572], [1.508055278E12, 3.4999999999999996], [1.508055272E12, 2.6666666666666665], [1.50805527E12, 2.9354838709677424], [1.508055274E12, 3.5], [1.508055266E12, 3.2083333333333326], [1.508055268E12, 2.71875], [1.50805526E12, 2.807692307692308], [1.508055264E12, 3.090909090909091], [1.508055262E12, 2.827586206896551], [1.508055256E12, 3.2258064516129035], [1.508055297E12, 3.5862068965517238], [1.508055254E12, 2.78125], [1.508055258E12, 2.9310344827586206], [1.508055293E12, 3.1612903225806455], [1.50805525E12, 3.03125], [1.508055291E12, 3.4848484848484853], [1.508055295E12, 3.0357142857142856], [1.508055252E12, 2.6399999999999992], [1.508055287E12, 3.25], [1.508055244E12, 3.0], [1.508055248E12, 2.7741935483870965], [1.508055289E12, 2.4827586206896557], [1.508055246E12, 2.8437499999999996], [1.50805524E12, 3.2142857142857144], [1.508055281E12, 3.4193548387096775], [1.508055285E12, 3.1034482758620694], [1.508055242E12, 3.1290322580645165], [1.508055283E12, 2.8666666666666667], [1.508055277E12, 2.833333333333333], [1.508055275E12, 2.8235294117647065], [1.508055279E12, 3.0606060606060606], [1.508055271E12, 2.7241379310344818], [1.508055273E12, 2.8387096774193545], [1.508055265E12, 3.290322580645162], [1.508055269E12, 2.9230769230769225], [1.508055267E12, 3.314285714285715], [1.508055261E12, 3.2424242424242427], [1.508055259E12, 3.03225806451613], [1.508055263E12, 2.9629629629629624], [1.508055255E12, 3.3461538461538467], [1.508055298E12, 3.1], [1.508055257E12, 2.8214285714285707]], "isOverall": false, "label": "CART - 0020 - Change Quatity", "isController": false}, {"data": [[1.508055249E12, 3.1], [1.508055292E12, 3.3103448275862073], [1.508055253E12, 2.941176470588236], [1.508055296E12, 2.7307692307692304], [1.508055251E12, 3.033333333333333], [1.508055294E12, 2.8709677419354835], [1.508055245E12, 2.8709677419354835], [1.508055288E12, 3.233333333333333], [1.508055243E12, 3.3714285714285714], [1.508055286E12, 3.0645161290322576], [1.508055247E12, 3.2162162162162167], [1.50805529E12, 2.96551724137931], [1.508055239E12, 2.75], [1.508055282E12, 3.115384615384615], [1.508055241E12, 3.0416666666666665], [1.508055284E12, 3.3461538461538454], [1.508055276E12, 3.0], [1.50805528E12, 2.740740740740741], [1.508055278E12, 3.2857142857142856], [1.508055272E12, 3.733333333333334], [1.50805527E12, 2.5862068965517238], [1.508055274E12, 3.3214285714285716], [1.508055266E12, 2.6538461538461537], [1.508055268E12, 2.9655172413793105], [1.50805526E12, 3.2333333333333334], [1.508055264E12, 2.787878787878788], [1.508055262E12, 3.2258064516129026], [1.508055256E12, 2.9705882352941173], [1.508055297E12, 3.0714285714285716], [1.508055254E12, 2.6551724137931036], [1.508055258E12, 3.0], [1.508055293E12, 3.1875000000000004], [1.50805525E12, 2.8000000000000003], [1.508055291E12, 3.258064516129032], [1.508055295E12, 3.4193548387096775], [1.508055252E12, 2.814814814814815], [1.508055287E12, 3.1851851851851865], [1.508055244E12, 2.96], [1.508055248E12, 3.115384615384615], [1.508055289E12, 3.466666666666667], [1.508055246E12, 3.172413793103448], [1.50805524E12, 3.6], [1.508055281E12, 2.9166666666666665], [1.508055285E12, 3.0937499999999996], [1.508055242E12, 3.0], [1.508055283E12, 2.9411764705882346], [1.508055277E12, 2.7812499999999996], [1.508055275E12, 3.09375], [1.508055279E12, 2.8064516129032255], [1.508055271E12, 2.8148148148148144], [1.508055273E12, 2.6875], [1.508055265E12, 2.8387096774193554], [1.508055269E12, 2.685714285714286], [1.508055267E12, 2.3333333333333335], [1.508055261E12, 2.633333333333333], [1.508055259E12, 2.5000000000000004], [1.508055263E12, 2.8518518518518516], [1.508055255E12, 3.1428571428571437], [1.508055298E12, 3.6153846153846154], [1.508055257E12, 2.9259259259259265]], "isOverall": false, "label": "CART - 0030 - Place Order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.508055298E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.508055239E12, "maxY": 512.0, "series": [{"data": [[1.508055249E12, 497.0], [1.508055292E12, 496.0], [1.508055253E12, 500.0], [1.508055296E12, 501.0], [1.508055251E12, 503.0], [1.508055294E12, 495.0], [1.508055245E12, 493.0], [1.508055288E12, 496.0], [1.508055243E12, 503.0], [1.508055286E12, 504.0], [1.508055247E12, 495.0], [1.50805529E12, 504.0], [1.508055239E12, 448.0], [1.508055282E12, 496.0], [1.508055241E12, 497.0], [1.508055284E12, 497.0], [1.508055276E12, 498.0], [1.50805528E12, 502.0], [1.508055278E12, 499.0], [1.508055272E12, 501.0], [1.50805527E12, 500.0], [1.508055274E12, 503.0], [1.508055266E12, 500.0], [1.508055268E12, 504.0], [1.50805526E12, 501.0], [1.508055264E12, 505.0], [1.508055262E12, 505.0], [1.508055256E12, 501.0], [1.508055297E12, 497.0], [1.508055254E12, 502.0], [1.508055258E12, 498.0], [1.508055293E12, 501.0], [1.50805525E12, 502.0], [1.508055291E12, 504.0], [1.508055295E12, 498.0], [1.508055252E12, 499.0], [1.508055287E12, 507.0], [1.508055244E12, 492.0], [1.508055248E12, 500.0], [1.508055289E12, 502.0], [1.508055246E12, 500.0], [1.50805524E12, 512.0], [1.508055281E12, 500.0], [1.508055285E12, 507.0], [1.508055242E12, 491.0], [1.508055283E12, 499.0], [1.508055277E12, 507.0], [1.508055275E12, 502.0], [1.508055279E12, 491.0], [1.508055271E12, 503.0], [1.508055273E12, 498.0], [1.508055265E12, 500.0], [1.508055269E12, 492.0], [1.508055267E12, 503.0], [1.508055261E12, 508.0], [1.508055259E12, 499.0], [1.508055263E12, 500.0], [1.508055255E12, 500.0], [1.508055298E12, 495.0], [1.508055257E12, 501.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.508055249E12, 52.0], [1.508055292E12, 58.0], [1.508055253E12, 51.0], [1.508055296E12, 51.0], [1.508055251E12, 68.0], [1.508055294E12, 56.0], [1.508055245E12, 64.0], [1.508055288E12, 58.0], [1.508055243E12, 51.0], [1.508055286E12, 56.0], [1.508055247E12, 57.0], [1.50805529E12, 69.0], [1.508055239E12, 56.0], [1.508055282E12, 61.0], [1.508055241E12, 60.0], [1.508055284E12, 54.0], [1.508055276E12, 59.0], [1.50805528E12, 57.0], [1.508055278E12, 54.0], [1.508055272E12, 56.0], [1.50805527E12, 56.0], [1.508055274E12, 65.0], [1.508055266E12, 51.0], [1.508055268E12, 56.0], [1.50805526E12, 54.0], [1.508055264E12, 50.0], [1.508055262E12, 56.0], [1.508055256E12, 65.0], [1.508055297E12, 54.0], [1.508055254E12, 59.0], [1.508055258E12, 59.0], [1.508055293E12, 57.0], [1.50805525E12, 61.0], [1.508055291E12, 55.0], [1.508055295E12, 58.0], [1.508055252E12, 55.0], [1.508055287E12, 51.0], [1.508055244E12, 53.0], [1.508055248E12, 70.0], [1.508055289E12, 61.0], [1.508055246E12, 56.0], [1.50805524E12, 93.0], [1.508055281E12, 58.0], [1.508055285E12, 58.0], [1.508055242E12, 73.0], [1.508055283E12, 57.0], [1.508055277E12, 57.0], [1.508055275E12, 56.0], [1.508055279E12, 57.0], [1.508055271E12, 52.0], [1.508055273E12, 56.0], [1.508055265E12, 54.0], [1.508055269E12, 55.0], [1.508055267E12, 55.0], [1.508055261E12, 61.0], [1.508055259E12, 60.0], [1.508055263E12, 53.0], [1.508055255E12, 62.0], [1.508055298E12, 92.0], [1.508055257E12, 57.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.508055249E12, 453.79999999999995], [1.508055292E12, 461.0], [1.508055253E12, 454.10000000000014], [1.508055296E12, 461.0], [1.508055251E12, 456.0], [1.508055294E12, 461.0], [1.508055245E12, 454.5], [1.508055288E12, 461.0], [1.508055243E12, 448.0], [1.508055286E12, 461.0], [1.508055247E12, 456.0], [1.50805529E12, 461.0], [1.508055239E12, 381.3], [1.508055282E12, 461.0], [1.508055241E12, 469.90000000000003], [1.508055284E12, 461.0], [1.508055276E12, 461.0], [1.50805528E12, 462.0], [1.508055278E12, 462.0], [1.508055272E12, 461.0999999999999], [1.50805527E12, 461.0], [1.508055274E12, 461.0], [1.508055266E12, 461.0], [1.508055268E12, 461.0], [1.50805526E12, 458.0], [1.508055264E12, 460.10000000000014], [1.508055262E12, 461.0], [1.508055256E12, 456.0], [1.508055297E12, 461.0], [1.508055254E12, 455.0], [1.508055258E12, 456.0], [1.508055293E12, 461.0], [1.50805525E12, 456.0], [1.508055291E12, 461.0], [1.508055295E12, 461.0], [1.508055252E12, 456.0], [1.508055287E12, 461.3000000000002], [1.508055244E12, 452.80000000000007], [1.508055248E12, 455.30000000000007], [1.508055289E12, 461.0], [1.508055246E12, 457.8000000000002], [1.50805524E12, 452.19999999999993], [1.508055281E12, 461.0], [1.508055285E12, 461.0], [1.508055242E12, 459.9000000000001], [1.508055283E12, 461.0], [1.508055277E12, 461.0], [1.508055275E12, 461.0], [1.508055279E12, 461.0], [1.508055271E12, 461.0], [1.508055273E12, 461.0], [1.508055265E12, 461.0], [1.508055269E12, 460.0999999999999], [1.508055267E12, 461.0], [1.508055261E12, 460.0], [1.508055259E12, 457.0], [1.508055263E12, 461.0], [1.508055255E12, 454.10000000000014], [1.508055298E12, 461.0], [1.508055257E12, 454.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.508055249E12, 497.0], [1.508055292E12, 499.8100000000004], [1.508055253E12, 498.0], [1.508055296E12, 500.0], [1.508055251E12, 498.0], [1.508055294E12, 499.97999999999956], [1.508055245E12, 496.4000000000001], [1.508055288E12, 499.0], [1.508055243E12, 497.56], [1.508055286E12, 499.0], [1.508055247E12, 497.0], [1.50805529E12, 499.6700000000001], [1.508055239E12, 448.0], [1.508055282E12, 499.0], [1.508055241E12, 504.0200000000001], [1.508055284E12, 499.0], [1.508055276E12, 500.0], [1.50805528E12, 499.0], [1.508055278E12, 499.40999999999985], [1.508055272E12, 500.0], [1.50805527E12, 500.0], [1.508055274E12, 500.0], [1.508055266E12, 500.0], [1.508055268E12, 500.0], [1.50805526E12, 499.56999999999994], [1.508055264E12, 500.0], [1.508055262E12, 499.71000000000004], [1.508055256E12, 499.98], [1.508055297E12, 499.3199999999997], [1.508055254E12, 498.70000000000005], [1.508055258E12, 499.28], [1.508055293E12, 500.0], [1.50805525E12, 497.0], [1.508055291E12, 500.0], [1.508055295E12, 499.10000000000036], [1.508055252E12, 498.0], [1.508055287E12, 499.0], [1.508055244E12, 497.0], [1.508055248E12, 497.13], [1.508055289E12, 499.0], [1.508055246E12, 497.97], [1.50805524E12, 512.0], [1.508055281E12, 499.0], [1.508055285E12, 499.0], [1.508055242E12, 497.57], [1.508055283E12, 499.0], [1.508055277E12, 500.0], [1.508055275E12, 500.0], [1.508055279E12, 499.0], [1.508055271E12, 500.0], [1.508055273E12, 500.0], [1.508055265E12, 500.0], [1.508055269E12, 500.0], [1.508055267E12, 500.0], [1.508055261E12, 499.6399999999999], [1.508055259E12, 499.0], [1.508055263E12, 500.0], [1.508055255E12, 499.0], [1.508055298E12, 499.0], [1.508055257E12, 500.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.508055249E12, 481.0], [1.508055292E12, 483.0], [1.508055253E12, 481.0], [1.508055296E12, 483.0], [1.508055251E12, 482.0], [1.508055294E12, 483.0], [1.508055245E12, 481.0], [1.508055288E12, 483.0], [1.508055243E12, 481.0], [1.508055286E12, 483.0], [1.508055247E12, 482.0], [1.50805529E12, 484.0], [1.508055239E12, 414.99999999999994], [1.508055282E12, 483.0], [1.508055241E12, 488.15], [1.508055284E12, 483.0], [1.508055276E12, 483.0], [1.50805528E12, 483.0], [1.508055278E12, 484.0], [1.508055272E12, 484.0], [1.50805527E12, 483.0], [1.508055274E12, 483.0], [1.508055266E12, 483.0], [1.508055268E12, 483.7999999999997], [1.50805526E12, 481.0], [1.508055264E12, 483.5499999999997], [1.508055262E12, 483.0], [1.508055256E12, 481.0], [1.508055297E12, 483.0], [1.508055254E12, 481.0], [1.508055258E12, 481.0], [1.508055293E12, 483.34999999999945], [1.50805525E12, 481.0], [1.508055291E12, 483.0], [1.508055295E12, 483.0], [1.508055252E12, 481.89999999999986], [1.508055287E12, 483.0], [1.508055244E12, 481.0], [1.508055248E12, 482.0], [1.508055289E12, 483.0], [1.508055246E12, 482.0], [1.50805524E12, 489.3499999999999], [1.508055281E12, 483.0], [1.508055285E12, 483.0], [1.508055242E12, 485.4], [1.508055283E12, 483.0], [1.508055277E12, 483.0], [1.508055275E12, 483.0], [1.508055279E12, 483.0], [1.508055271E12, 483.25], [1.508055273E12, 483.0], [1.508055265E12, 483.0], [1.508055269E12, 483.0], [1.508055267E12, 483.0], [1.508055261E12, 483.0], [1.508055259E12, 481.0], [1.508055263E12, 484.0], [1.508055255E12, 481.0], [1.508055298E12, 483.89999999999964], [1.508055257E12, 481.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.508055298E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 224.0, "minX": 30.0, "maxY": 356.5, "series": [{"data": [[34.0, 356.5], [46.0, 325.0], [79.0, 263.0], [80.0, 274.5], [82.0, 296.5], [83.0, 294.0], [86.0, 295.0], [87.0, 276.0], [84.0, 282.0], [85.0, 274.0], [89.0, 277.5], [88.0, 275.5], [91.0, 282.0], [90.0, 265.5], [92.0, 280.0], [93.0, 271.0], [95.0, 254.0], [94.0, 241.5], [97.0, 269.0], [98.0, 260.5], [96.0, 267.0], [99.0, 276.0], [101.0, 224.0], [30.0, 268.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 101.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 21.0, "minX": 30.0, "maxY": 30.5, "series": [{"data": [[34.0, 30.0], [46.0, 30.5], [79.0, 26.0], [80.0, 25.5], [82.0, 25.0], [83.0, 26.0], [86.0, 25.0], [87.0, 24.0], [84.0, 24.0], [85.0, 23.0], [89.0, 26.0], [88.0, 25.0], [91.0, 22.0], [90.0, 25.0], [92.0, 24.0], [93.0, 26.0], [95.0, 27.0], [94.0, 21.0], [97.0, 25.0], [98.0, 27.0], [96.0, 26.0], [99.0, 24.0], [101.0, 26.0], [30.0, 24.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 101.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.508055239E12, "maxY": 101.0, "series": [{"data": [[1.508055249E12, 83.0], [1.508055292E12, 91.0], [1.508055253E12, 90.0], [1.508055296E12, 94.0], [1.508055251E12, 101.0], [1.508055294E12, 88.0], [1.508055245E12, 90.0], [1.508055288E12, 94.0], [1.508055243E12, 95.0], [1.508055286E12, 98.0], [1.508055247E12, 89.0], [1.50805529E12, 84.0], [1.508055239E12, 45.0], [1.508055282E12, 88.0], [1.508055241E12, 82.0], [1.508055284E12, 87.0], [1.508055276E12, 84.0], [1.50805528E12, 90.0], [1.508055278E12, 93.0], [1.508055272E12, 84.0], [1.50805527E12, 88.0], [1.508055274E12, 83.0], [1.508055266E12, 83.0], [1.508055268E12, 92.0], [1.50805526E12, 81.0], [1.508055264E12, 95.0], [1.508055262E12, 91.0], [1.508055256E12, 83.0], [1.508055297E12, 93.0], [1.508055254E12, 94.0], [1.508055258E12, 85.0], [1.508055293E12, 92.0], [1.50805525E12, 90.0], [1.508055291E12, 97.0], [1.508055295E12, 86.0], [1.508055252E12, 84.0], [1.508055287E12, 88.0], [1.508055244E12, 87.0], [1.508055248E12, 92.0], [1.508055289E12, 86.0], [1.508055246E12, 88.0], [1.50805524E12, 53.0], [1.508055281E12, 93.0], [1.508055285E12, 83.0], [1.508055242E12, 91.0], [1.508055283E12, 92.0], [1.508055277E12, 89.0], [1.508055275E12, 94.0], [1.508055279E12, 88.0], [1.508055271E12, 92.0], [1.508055273E12, 98.0], [1.508055265E12, 88.0], [1.508055269E12, 92.0], [1.508055267E12, 92.0], [1.508055261E12, 93.0], [1.508055259E12, 94.0], [1.508055263E12, 87.0], [1.508055255E12, 82.0], [1.508055298E12, 3.0], [1.508055257E12, 89.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.508055298E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.508055239E12, "maxY": 101.0, "series": [{"data": [[1.508055249E12, 84.0], [1.508055292E12, 90.0], [1.508055253E12, 97.0], [1.508055296E12, 88.0], [1.508055251E12, 97.0], [1.508055294E12, 89.0], [1.508055245E12, 89.0], [1.508055288E12, 95.0], [1.508055243E12, 101.0], [1.508055286E12, 99.0], [1.508055247E12, 97.0], [1.50805529E12, 86.0], [1.508055239E12, 30.0], [1.508055282E12, 85.0], [1.508055241E12, 80.0], [1.508055284E12, 84.0], [1.508055276E12, 83.0], [1.50805528E12, 85.0], [1.508055278E12, 88.0], [1.508055272E12, 84.0], [1.50805527E12, 87.0], [1.508055274E12, 85.0], [1.508055266E12, 80.0], [1.508055268E12, 91.0], [1.50805526E12, 82.0], [1.508055264E12, 98.0], [1.508055262E12, 93.0], [1.508055256E12, 93.0], [1.508055297E12, 90.0], [1.508055254E12, 91.0], [1.508055258E12, 85.0], [1.508055293E12, 94.0], [1.50805525E12, 92.0], [1.508055291E12, 96.0], [1.508055295E12, 88.0], [1.508055252E12, 82.0], [1.508055287E12, 83.0], [1.508055244E12, 82.0], [1.508055248E12, 87.0], [1.508055289E12, 85.0], [1.508055246E12, 88.0], [1.50805524E12, 46.0], [1.508055281E12, 98.0], [1.508055285E12, 85.0], [1.508055242E12, 86.0], [1.508055283E12, 96.0], [1.508055277E12, 91.0], [1.508055275E12, 95.0], [1.508055279E12, 93.0], [1.508055271E12, 89.0], [1.508055273E12, 98.0], [1.508055265E12, 91.0], [1.508055269E12, 95.0], [1.508055267E12, 93.0], [1.508055261E12, 93.0], [1.508055259E12, 89.0], [1.508055263E12, 82.0], [1.508055255E12, 79.0], [1.508055298E12, 34.0], [1.508055257E12, 85.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.508055298E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.508055239E12, "maxY": 37.0, "series": [{"data": [[1.508055249E12, 25.0], [1.508055292E12, 31.0], [1.508055253E12, 31.0], [1.508055296E12, 33.0], [1.508055251E12, 35.0], [1.508055294E12, 29.0], [1.508055245E12, 27.0], [1.508055288E12, 31.0], [1.508055243E12, 34.0], [1.508055286E12, 35.0], [1.508055247E12, 30.0], [1.50805529E12, 27.0], [1.508055239E12, 11.0], [1.508055282E12, 31.0], [1.508055241E12, 25.0], [1.508055284E12, 26.0], [1.508055276E12, 27.0], [1.50805528E12, 28.0], [1.508055278E12, 28.0], [1.508055272E12, 30.0], [1.50805527E12, 31.0], [1.508055274E12, 28.0], [1.508055266E12, 24.0], [1.508055268E12, 32.0], [1.50805526E12, 26.0], [1.508055264E12, 33.0], [1.508055262E12, 29.0], [1.508055256E12, 31.0], [1.508055297E12, 29.0], [1.508055254E12, 32.0], [1.508055258E12, 29.0], [1.508055293E12, 31.0], [1.50805525E12, 32.0], [1.508055291E12, 33.0], [1.508055295E12, 28.0], [1.508055252E12, 25.0], [1.508055287E12, 28.0], [1.508055244E12, 28.0], [1.508055248E12, 31.0], [1.508055289E12, 29.0], [1.508055246E12, 32.0], [1.50805524E12, 14.0], [1.508055281E12, 31.0], [1.508055285E12, 29.0], [1.508055242E12, 31.0], [1.508055283E12, 30.0], [1.508055277E12, 30.0], [1.508055275E12, 34.0], [1.508055279E12, 33.0], [1.508055271E12, 29.0], [1.508055273E12, 31.0], [1.508055265E12, 31.0], [1.508055269E12, 26.0], [1.508055267E12, 35.0], [1.508055261E12, 33.0], [1.508055259E12, 31.0], [1.508055263E12, 27.0], [1.508055255E12, 26.0], [1.508055298E12, 10.0], [1.508055257E12, 28.0]], "isOverall": false, "label": "CART - 0020 - Change Quatity-success", "isController": false}, {"data": [[1.508055249E12, 29.0], [1.508055292E12, 30.0], [1.508055253E12, 32.0], [1.508055296E12, 29.0], [1.508055251E12, 32.0], [1.508055294E12, 29.0], [1.508055245E12, 31.0], [1.508055288E12, 34.0], [1.508055243E12, 32.0], [1.508055286E12, 33.0], [1.508055247E12, 30.0], [1.50805529E12, 30.0], [1.508055239E12, 15.0], [1.508055282E12, 28.0], [1.508055241E12, 31.0], [1.508055284E12, 32.0], [1.508055276E12, 28.0], [1.50805528E12, 30.0], [1.508055278E12, 32.0], [1.508055272E12, 24.0], [1.50805527E12, 27.0], [1.508055274E12, 29.0], [1.508055266E12, 30.0], [1.508055268E12, 30.0], [1.50805526E12, 26.0], [1.508055264E12, 32.0], [1.508055262E12, 33.0], [1.508055256E12, 28.0], [1.508055297E12, 33.0], [1.508055254E12, 30.0], [1.508055258E12, 29.0], [1.508055293E12, 31.0], [1.50805525E12, 30.0], [1.508055291E12, 32.0], [1.508055295E12, 29.0], [1.508055252E12, 30.0], [1.508055287E12, 28.0], [1.508055244E12, 29.0], [1.508055248E12, 30.0], [1.508055289E12, 26.0], [1.508055246E12, 27.0], [1.50805524E12, 17.0], [1.508055281E12, 31.0], [1.508055285E12, 24.0], [1.508055242E12, 27.0], [1.508055283E12, 32.0], [1.508055277E12, 29.0], [1.508055275E12, 29.0], [1.508055279E12, 29.0], [1.508055271E12, 33.0], [1.508055273E12, 35.0], [1.508055265E12, 29.0], [1.508055269E12, 34.0], [1.508055267E12, 28.0], [1.508055261E12, 30.0], [1.508055259E12, 32.0], [1.508055263E12, 28.0], [1.508055255E12, 25.0], [1.508055298E12, 11.0], [1.508055257E12, 30.0]], "isOverall": false, "label": "CART - 0010 - Add to Cart-success", "isController": false}, {"data": [[1.508055249E12, 30.0], [1.508055292E12, 29.0], [1.508055253E12, 34.0], [1.508055296E12, 26.0], [1.508055251E12, 30.0], [1.508055294E12, 31.0], [1.508055245E12, 31.0], [1.508055288E12, 30.0], [1.508055243E12, 35.0], [1.508055286E12, 31.0], [1.508055247E12, 37.0], [1.50805529E12, 29.0], [1.508055239E12, 4.0], [1.508055282E12, 26.0], [1.508055241E12, 24.0], [1.508055284E12, 26.0], [1.508055276E12, 28.0], [1.50805528E12, 27.0], [1.508055278E12, 28.0], [1.508055272E12, 30.0], [1.50805527E12, 29.0], [1.508055274E12, 28.0], [1.508055266E12, 26.0], [1.508055268E12, 29.0], [1.50805526E12, 30.0], [1.508055264E12, 33.0], [1.508055262E12, 31.0], [1.508055256E12, 34.0], [1.508055297E12, 28.0], [1.508055254E12, 29.0], [1.508055258E12, 27.0], [1.508055293E12, 32.0], [1.50805525E12, 30.0], [1.508055291E12, 31.0], [1.508055295E12, 31.0], [1.508055252E12, 27.0], [1.508055287E12, 27.0], [1.508055244E12, 25.0], [1.508055248E12, 26.0], [1.508055289E12, 30.0], [1.508055246E12, 29.0], [1.50805524E12, 15.0], [1.508055281E12, 36.0], [1.508055285E12, 32.0], [1.508055242E12, 28.0], [1.508055283E12, 34.0], [1.508055277E12, 32.0], [1.508055275E12, 32.0], [1.508055279E12, 31.0], [1.508055271E12, 27.0], [1.508055273E12, 32.0], [1.508055265E12, 31.0], [1.508055269E12, 35.0], [1.508055267E12, 30.0], [1.508055261E12, 30.0], [1.508055259E12, 26.0], [1.508055263E12, 27.0], [1.508055255E12, 28.0], [1.508055298E12, 13.0], [1.508055257E12, 27.0]], "isOverall": false, "label": "CART - 0030 - Place Order-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.508055298E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
